{"version":3,"sources":["redux/slices/purchase.js","pages/dashboard/PurchaseList.js"],"names":["slice","createSlice","name","initialState","isLoading","error","purchases","purchase","sortBy","filters","gender","category","colors","priceRange","rating","checkout","activeStep","cart","subtotal","total","discount","shipping","billing","reducers","startLoading","state","hasError","action","payload","getpurchasesSuccess","getpurchaseSuccess","sortBypurchases","filterpurchases","getCart","sum","map","cartItem","price","quantity","length","addCart","isEmptyCart","_purchase","id","uniqBy","deleteCart","updateCart","filter","item","resetCart","onBackStep","onNextStep","onGotoStep","goToStep","increaseQuantity","purchaseId","decreaseQuantity","createBilling","applyDiscount","applyShipping","actions","getpurchases","skip","limit","search","from","to","a","axios","post","HOST_API","response","data","dispatch","getcompanyList","getpurchasesId","_id","savepurchase","paidStatus","TABLE_HEAD","label","alignRight","EcommerceProductList","themeStretch","useSettings","theme","useTheme","palette","mode","useDispatch","useState","productList","setProductList","page","setPage","order","setOrder","selected","setSelected","filterName","setFilterName","rowsPerPage","setRowsPerPage","orderBy","count","setCount","startDate","setStartDate","endDate","setEndDate","anchorEl","useTabs","currentTab","onChangeTab","invoiceDetails","setInvoiceDetails","Boolean","useEffect","console","log","getdata","handleChangeRowsPerPage","event","target","value","parseInt","handleFilterByName","totalDocData","emptyRows","isNotFound","getLengthByStatus","deleteProducts","product","getPercentByStatus","percentage","getTotalPriceByStatus","title","maxWidth","heading","links","href","PATH_DASHBOARD","root","variant","component","RouterLink","newPurchase","startIcon","icon","sx","mb","direction","divider","orientation","flexItem","borderStyle","py","percent","color","info","main","success","warning","numSelected","clearDate","onFilterName","onDeleteProducts","includes","handleDeleteProducts","placeholder","selecteStartdDate","selecteEnddDate","minWidth","headLabel","rowCount","onRequestSort","property","row","dateOfPurchase","grandTotal","dealer","dealerDetails","paid","balance","due","isItemSelected","indexOf","hover","tabIndex","role","padding","checked","onClick","selectedIndex","newSelected","concat","handleClick","style","fDate","phone","fCurrency","align","menu","productId","onDelete","deleteProduct","handleDeleteProduct","height","colSpan","searchQuery","rowsPerPageOptions","onPageChange","handlePageChange","onRowsPerPageChange"],"mappings":"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","file":"static/js/59.bd58c605.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport sum from 'lodash/sum';\nimport uniqBy from 'lodash/uniqBy';\n// utils\n// import axios from '../../utils/axios';\nimport axios from 'axios';\n//\nimport { dispatch } from '../store';\nimport {HOST_API} from '../../config'\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  purchases: [],\n  purchase: null,\n  sortBy: null,\n  filters: {\n    gender: [],\n    category: 'All',\n    colors: [],\n    priceRange: '',\n    rating: '',\n  },\n  checkout: {\n    activeStep: 0,\n    cart: [],\n    subtotal: 0,\n    total: 0,\n    discount: 0,\n    shipping: 0,\n    billing: null,\n  },\n};\n\nconst slice = createSlice({\n  name: 'purchase',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET purchaseS\n    getpurchasesSuccess(state, action) {\n      state.isLoading = false;\n      state.purchases = action.payload;\n    },\n\n    // GET purchase\n    getpurchaseSuccess(state, action) {\n      state.isLoading = false;\n      state.purchase = action.payload;\n    },\n\n    //  SORT & FILTER purchaseS\n    sortBypurchases(state, action) {\n      state.sortBy = action.payload;\n    },\n\n    filterpurchases(state, action) {\n      state.filters.gender = action.payload.gender;\n      state.filters.category = action.payload.category;\n      state.filters.colors = action.payload.colors;\n      state.filters.priceRange = action.payload.priceRange;\n      state.filters.rating = action.payload.rating;\n    },\n\n    // CHECKOUT\n    getCart(state, action) {\n      const cart = action.payload;\n\n      const subtotal = sum(cart.map((cartItem) => cartItem.price * cartItem.quantity));\n      const discount = cart.length === 0 ? 0 : state.checkout.discount;\n      const shipping = cart.length === 0 ? 0 : state.checkout.shipping;\n      const billing = cart.length === 0 ? null : state.checkout.billing;\n\n      state.checkout.cart = cart;\n      state.checkout.discount = discount;\n      state.checkout.shipping = shipping;\n      state.checkout.billing = billing;\n      state.checkout.subtotal = subtotal;\n      state.checkout.total = subtotal - discount;\n    },\n\n    addCart(state, action) {\n      const purchase = action.payload;\n      const isEmptyCart = state.checkout.cart.length === 0;\n\n      if (isEmptyCart) {\n        state.checkout.cart = [...state.checkout.cart, purchase];\n      } else {\n        state.checkout.cart = state.checkout.cart.map((_purchase) => {\n          const isExisted = _purchase.id === purchase.id;\n          if (isExisted) {\n            return {\n              ..._purchase,\n              quantity: _purchase.quantity + 1,\n            };\n          }\n          return _purchase;\n        });\n      }\n      state.checkout.cart = uniqBy([...state.checkout.cart, purchase], 'id');\n    },\n\n    deleteCart(state, action) {\n      const updateCart = state.checkout.cart.filter((item) => item.id !== action.payload);\n\n      state.checkout.cart = updateCart;\n    },\n\n    resetCart(state) {\n      state.checkout.activeStep = 0;\n      state.checkout.cart = [];\n      state.checkout.total = 0;\n      state.checkout.subtotal = 0;\n      state.checkout.discount = 0;\n      state.checkout.shipping = 0;\n      state.checkout.billing = null;\n    },\n\n    onBackStep(state) {\n      state.checkout.activeStep -= 1;\n    },\n\n    onNextStep(state) {\n      state.checkout.activeStep += 1;\n    },\n\n    onGotoStep(state, action) {\n      const goToStep = action.payload;\n      state.checkout.activeStep = goToStep;\n    },\n\n    increaseQuantity(state, action) {\n      const purchaseId = action.payload;\n      const updateCart = state.checkout.cart.map((purchase) => {\n        if (purchase.id === purchaseId) {\n          return {\n            ...purchase,\n            quantity: purchase.quantity + 1,\n          };\n        }\n        return purchase;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    decreaseQuantity(state, action) {\n      const purchaseId = action.payload;\n      const updateCart = state.checkout.cart.map((purchase) => {\n        if (purchase.id === purchaseId) {\n          return {\n            ...purchase,\n            quantity: purchase.quantity - 1,\n          };\n        }\n        return purchase;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    createBilling(state, action) {\n      state.checkout.billing = action.payload;\n    },\n\n    applyDiscount(state, action) {\n      const discount = action.payload;\n      state.checkout.discount = discount;\n      state.checkout.total = state.checkout.subtotal - discount;\n    },\n\n    applyShipping(state, action) {\n      const shipping = action.payload;\n      state.checkout.shipping = shipping;\n      state.checkout.total = state.checkout.subtotal - state.checkout.discount + shipping;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const {\n  getCart,\n  addCart,\n  resetCart,\n  onGotoStep,\n  onBackStep,\n  onNextStep,\n  deleteCart,\n  createBilling,\n  applyShipping,\n  applyDiscount,\n  increaseQuantity,\n  decreaseQuantity,\n  sortBypurchases,\n  filterpurchases,\n} = slice.actions;\n\n// ----------------------------------------------------------------------\n\n/* export function getpurchases() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post(HOST_API+'/invoice/getinvoicesId');\n      console.log(response.data);\n      if(response.data.status !==0){\n        dispatch(slice.actions.getpurchasesSuccess(response.data.response.data));\n      }else{\n        dispatch(slice.actions.hasError(response.data.response));\n      }\n\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} */\n\n\n\nexport async function  getpurchases (skip,limit,search,from,to) {\n  try {  \n\n    const response = await axios.post(`${HOST_API}purchase/list`,{'skip':skip,'limit':limit,'search':search,from,to});\n   return response.data.response\n    // if(response.data.status !==0){\n    //   dispatch(slice.actions.getpurchasesSuccess(response.data.response.data));\n    // }else{\n    //   dispatch(slice.actions.hasError(response.data.invoiceId));\n    // }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n \n}\n\n\n\nexport async function getcompanyList ( ) { \n  try { \n    const response =await axios.post(`${HOST_API}dealers/getdealersList`,{ });\n    return response.data.response\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n}\n\nexport async function getpurchasesId (id) { \n    try { \n      const response =await axios.post(`${HOST_API}purchase/Details`,{_id:id});\n      return response.data.response\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n}\n\nexport async function savepurchase (_id,paidStatus) { \n  try { \n    const response =await axios.post(`${HOST_API}purchase/save`,{paidStatus,_id});\n    return response.data.response\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n}\n\n// ----------------------------------------------------------------------\n\nexport function getpurchase(name) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/purchases/purchase', {\n        params: { name },\n      });\n      dispatch(slice.actions.getpurchaseSuccess(response.data.purchase));\n    } catch (error) {\n      console.error(error);\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n"," \nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom'; \n\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  TableRow,\n  Checkbox, \n  Divider,\n  TableBody, Stack,\n  TableCell,\n  Container, \n  TableContainer,\n  TablePagination, \n  Button\n} from '@mui/material';\n// redux  \n\n// import TextField from '@mui/material/TextField'; \n// import DatePicker from \"@mui/lab/DatePicker\"; \n\nimport { useDispatch } from '../../redux/store';\nimport purchase, { getpurchases, savepurchase } from '../../redux/slices/purchase';\n// utils\nimport { fDate } from '../../utils/formatTime'; \nimport { fCurrency } from '../../utils/formatNumber';\n\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\n// import Image from '../../components/Image';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport Iconify from '../../components/Iconify';\n// sections\nimport {\n  ProductMoreMenu,\n  ProductListHead,\n  ProductListToolbar,\n} from '../../sections/@dashboard/e-commerce/product-list';\n\nimport InvoiceAnalytic from '../../sections/@dashboard/e-commerce/InvoiceAnalytic';\nimport useTabs from '../../hooks/useTabs';\n\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'purchaseId', label: 'PurchaseId', alignRight: false },\n  { id: 'dateOfPurchase', label: 'Create at', alignRight: false },\n  { id: 'company', label: 'Seller Name', alignRight: false },\n  { id: 'phone', label: 'Seller Phone', alignRight: false },\n  { id: 'dueMonth', label: 'Last Due', alignRight: false },\n  { id: 'amount', label: 'Amount', alignRight: false },\n  { id: 'paidAmount', label: 'Paid', alignRight: false },\n  { id: 'balance', label: 'Balance', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function EcommerceProductList() {\n\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  const dispatch = useDispatch();\n\n  const [productList, setProductList] = useState([]);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [orderBy, setOrderBy] = useState('');\n  const [count, setCount] = useState(0);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const { currentTab: filterStatus, onChangeTab: onFilterStatus } = useTabs('all');\n  const [invoiceDetails, setInvoiceDetails] = useState()\n  const open = Boolean(anchorEl);\n\n  useEffect(() => {\n    console.log('Do something after counter has changed');\n    getdata()\n  }, [rowsPerPage, page, filterName, startDate, endDate ]);\n\n  const handleRequestSort = (property) => {\n    // console.log(\"property\",property );\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n  };\n\n \n  const handleClick = (name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangeRowsPerPage = async (event) => {\n    console.log(event.target.value);\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (value) => {\n    setPage(value)\n  }\n\n\n  const handleFilterByName = async (filterName) => {\n    setFilterName(filterName);\n  };\n\n  const handleClickListItem = (event, _id) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedProduct(_id)\n  };\n\n  const handleMenuItemClick = async (event, data) => {\n    console.log(selectedProduct, data);\n    const value = await savepurchase(selectedProduct, data);\n    setAnchorEl(null);\n    getdata()\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const getdata = async (event) => {\n    const skip = page * rowsPerPage;\n    const limit = rowsPerPage;\n    console.log('page', page);\n    console.log('skip', skip);\n    console.log('limit', limit);\n    // console.log('filterStatus', filterStatus);\n    \n    console.log('startDate,endDate', startDate, endDate);\n    const value = await getpurchases(skip, limit, filterName, startDate, endDate);\n    if(value){\n    setProductList(value.data);\n    setCount(value.count);\n    setInvoiceDetails( value.totalDocData)}\n    // setPage(0);\n  };\n\n  const PAID_STATUS = ['UnPaid', 'Paid', 'Over Due', 'Cancelled'];\n\n  const handleDeleteProduct = (productId) => {\n    const deleteProduct = productList.filter((product) => product.id !== productId);\n    setSelected([]);\n    setProductList(deleteProduct);\n  };\n\n  const handleDeleteProducts = (selected) => {\n    const deleteProducts = productList.filter((product) => !selected.includes(product.name));\n    setSelected([]);\n    setProductList(deleteProducts);\n  };\n\n  const handleclearDate = () => {\n    setStartDate(null);\n    setEndDate(null);\n  }\n\n\n  // const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - productList.length) : 0;\n  const emptyRows = !productList.length && Boolean(!filterName);\n  // const filteredProducts = applySortFilter(productList , getComparator(order, orderBy), filterName );\n  // const filteredProducts = saerchFilter(  filterName );\n\n  const isNotFound = !productList.length && Boolean(filterName);\n\n\n \n\n  const getLengthByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].total : 0\n    }\n  }\n  const getPercentByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].percentage : 0\n    }\n  };\n  const getTotalPriceByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].price : 0\n\n    }\n  };\n\n  const TABS = [\n    { value: ' ', label: 'All', color: 'info', count: productList.length },\n    { value: 'Paid', label: 'Paid', color: 'success', count: getLengthByStatus('Paid') },\n    { value: 'Un Paid', label: 'Unpaid', color: 'warning', count: getLengthByStatus('UnPaid') },\n    { value: 'Over Due', label: 'Overdue', color: 'error', count: getLengthByStatus('Over Due') },\n    { value: 'Cancelled', label: 'Cancelled', color: 'default', count: getLengthByStatus('Cancelled') },\n  ];\n\n  return (\n    <Page title=\" Purchase List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Purchase List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: 'Purchase',\n              href: PATH_DASHBOARD.purchase.root,\n            },\n            { name: 'Purchase List' },\n          ]} action={<Button\n            variant=\"contained\"\n            component={RouterLink}\n            to={PATH_DASHBOARD.purchase.newPurchase}\n            startIcon={<Iconify icon={'eva:plus-fill'} />}\n          >\n            New Purchase\n          </Button>}\n        />\n\n        <Card sx={{ mb: 5 }}>\n          <Scrollbar>\n            <Stack\n              direction=\"row\"\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\n              sx={{ py: 2 }}\n            >\n              <InvoiceAnalytic\n                title=\"Total\"\n                total={getLengthByStatus('all')}\n                percent={getPercentByStatus('all')}\n                price={getTotalPriceByStatus('all')}\n                icon=\"ic:round-receipt\"\n                color={theme.palette.info.main}\n              />\n              <InvoiceAnalytic\n                title=\"Paid\"\n                total={getLengthByStatus('Paid')}\n                percent={getPercentByStatus('Paid')}\n                price={getTotalPriceByStatus('Paid')}\n                icon=\"eva:checkmark-circle-2-fill\"\n                color={theme.palette.success.main}\n              />\n              <InvoiceAnalytic\n                title=\"Unpaid\"\n                total={getLengthByStatus('UnPaid')}\n                percent={getPercentByStatus('UnPaid')}\n                price={getTotalPriceByStatus('UnPaid')}\n                icon=\"eva:clock-fill\"\n                color={theme.palette.warning.main}\n              />\n               \n            </Stack>\n          </Scrollbar>\n        </Card>\n\n        <Card> \n          <ProductListToolbar\n            numSelected={selected.length}\n            filterName={filterName}\n            clearDate={() => handleclearDate()}\n            onFilterName={handleFilterByName}\n            onDeleteProducts={() => handleDeleteProducts(selected)}\n            startDate={startDate}\n            endDate={endDate}\n            placeholder=\"Search Purchase\"\n            selecteStartdDate={(value) => setStartDate(value)}\n            selecteEnddDate={(value) => setEndDate(value)}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <ProductListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={productList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                // onSelectAllClick={handleSelectAllClick}\n                />\n\n                <TableBody>\n                  {/*  {productList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => { */}\n                  {productList.map((row) => {\n                    // console.log(productList);\n                    const { _id, purchaseId, \n                      dateOfPurchase,\n                      dealer,\n                      grandTotal,\n                      dealerDetails,\n                      paid,\n                      balance,\n                      due,\n                      paidStatus, } = row;\n\n                    const isItemSelected = selected.indexOf(purchaseId) !== -1;\n\n                    return (\n\n                      <TableRow\n                        hover\n                        key={_id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onClick={() => handleClick(purchaseId)} />\n                        </TableCell>\n                        <TableCell >{purchaseId}</TableCell>\n                        <TableCell style={{ minWidth: 160 }}>{fDate(dateOfPurchase)}</TableCell>\n                        <TableCell >{dealerDetails.name}</TableCell>\n                        <TableCell >{dealerDetails.phone?dealerDetails.phone:'----'}</TableCell>\n                        <TableCell >{due}</TableCell>\n                        <TableCell >{fCurrency(grandTotal)}</TableCell>\n                        <TableCell >{fCurrency(paid)}</TableCell>\n                        <TableCell >{fCurrency(balance)}</TableCell>\n                        <TableCell >{paidStatus}</TableCell>\n\n                        {/* <TableCell >{fDate(dateOfPurchase + (due * (1000 * 60 * 60 * 24 * 30)))} </TableCell> */}\n                       {/*  <TableCell >\n\n                          <Label\n                            variant={isLight ? 'ghost' : 'filled'}\n                            onClick={(e) => handleClickListItem(e, _id)}\n                            color={\n                              (paidStatus === 'Paid' && 'success') || (paidStatus === 'UnPaid' && 'info') || (paidStatus === 'Cancelled' && 'warning') || 'error'\n                            }\n                          >\n                            {sentenceCase(paidStatus)}\n                          </Label>\n\n                          <Menu\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                          >\n                            {PAID_STATUS.map((option, index) => (\n                              <MenuItem\n                                key={option}\n                                // disabled={option === paidStatus}\n                                // selected={index === selectedIndex}\n                                onClick={(event) => handleMenuItemClick(event, PAID_STATUS[index])}\n                              >\n                                {option} \n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </TableCell> */}\n                        <TableCell align=\"right\">\n                          <ProductMoreMenu  menu=\"purchase\" productId={_id} onDelete={() => handleDeleteProduct(_id)} />\n                        </TableCell>\n                        {/* <TableCell align=\"right\">{}</TableCell> */}\n\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell align=\"center\" colSpan={10} >No Record</TableCell>\n\n                    </TableRow>\n                  )}\n                </TableBody>\n\n                {isNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={8}>\n                        <Box sx={{ py: 3 }}>\n                          <SearchNotFound searchQuery={filterName} />\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={count}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            // onPageChange={(event, value) => { setPage(value) }}\n            onPageChange={(event, value) => { console.log('onPageChange', value); handlePageChange(value) }}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction saerchFilter(search) {\n  console.log(search);\n}\n\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    console.log('----', query);\n\n  }\n\n  return stabilizedThis.map((el) => el[0]);\n}"],"sourceRoot":""}