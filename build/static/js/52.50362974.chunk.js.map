{"version":3,"sources":["../../src/index.ts","../node_modules/lodash/sumBy.js","pages/dashboard/EcommerceProductList.js"],"names":["sentenceCaseTransform","input","index","result","toLowerCase","sentenceCase","options","delimiter","transform","baseIteratee","require","baseSum","module","exports","array","iteratee","length","TABLE_HEAD","id","label","alignRight","EcommerceProductList","themeStretch","useSettings","theme","useTheme","isLight","palette","mode","useDispatch","useState","productList","setProductList","page","setPage","order","setOrder","selected","setSelected","filterName","setFilterName","rowsPerPage","setRowsPerPage","orderBy","count","setCount","startDate","setStartDate","endDate","setEndDate","anchorEl","setAnchorEl","selectedProduct","setSelectedProduct","useTabs","currentTab","onChangeTab","invoiceDetails","setInvoiceDetails","open","Boolean","useEffect","getdata","handleChangeRowsPerPage","event","a","parseInt","target","value","handleFilterByName","handleMenuItemClick","data","saveProduct","handleClose","skip","limit","getProducts","console","log","totalDocData","PAID_STATUS","emptyRows","isNotFound","getLengthByStatus","deleteProducts","filter","product","_id","total","getPercentByStatus","percentage","getTotalPriceByStatus","price","title","maxWidth","heading","links","name","href","PATH_DASHBOARD","root","eCommerce","action","variant","component","RouterLink","to","newProduct","startIcon","icon","sx","mb","direction","divider","orientation","flexItem","borderStyle","py","percent","color","info","main","success","warning","error","text","secondary","numSelected","clearDate","onFilterName","onDeleteProducts","includes","handleDeleteProducts","placeholder","selecteStartdDate","selecteEnddDate","minWidth","headLabel","rowCount","onRequestSort","property","map","row","invoiceId","customerName","customerPhone","invoiceDate","grandTotal","due","paidStatus","isItemSelected","paymentType","indexOf","hover","tabIndex","role","padding","checked","onClick","selectedIndex","newSelected","concat","slice","handleClick","style","fDate","fCurrency","e","currentTarget","handleClickListItem","onClose","option","align","menu","productId","onDelete","deleteProduct","handleDeleteProduct","height","colSpan","searchQuery","rowsPerPageOptions","onPageChange","handlePageChange","onRowsPerPageChange"],"mappings":"wHAGM,SAAU,EAAe,GAC7B,OAAO,EAAM,OAAO,GAAG,cAAgB,EAAM,OAAO,GAJtD,mC,oGAKM,SAAUA,EAAsBC,EAAeC,GACnD,IAAMC,EAASF,EAAMG,cACrB,OAAc,IAAVF,EAAoB,YAAeC,GAChCA,EAGH,SAAUE,EAAaJ,EAAeK,GAC1C,YAD0C,IAAAA,MAAA,IACnC,YAAOL,EAAK,aACjBM,UAAW,IACXC,UAAWR,GACRM,M,qBCfP,IAAIG,EAAeC,EAAQ,KACvBC,EAAUD,EAAQ,KA+BtBE,EAAOC,QANP,SAAeC,EAAOC,GACpB,OAAQD,GAASA,EAAME,OACnBL,EAAQG,EAAOL,EAAaM,EAAU,IACtC,I,6cC8BAE,EAAa,CACjB,CAAEC,GAAI,YAAaC,MAAO,aAAcC,YAAY,GACpD,CAAEF,GAAI,YAAaC,MAAO,YAAaC,YAAY,GACnD,CAAEF,GAAI,eAAgBC,MAAO,gBAAiBC,YAAY,GAC1D,CAAEF,GAAI,gBAAiBC,MAAO,iBAAkBC,YAAY,GAC5D,CAAEF,GAAI,aAAcC,MAAO,SAAUC,YAAY,GACjD,CAAEF,GAAI,MAAOC,MAAO,WAAYC,YAAY,GAC5C,CAAEF,GAAI,OAAQC,MAAO,cAAeC,YAAY,GAEhD,CAAEF,GAAI,KAKO,SAASG,IAGtB,IAAQC,EAAiBC,cAAjBD,aACFE,EAAQC,cACRC,EAAiC,UAAvBF,EAAMG,QAAQC,KAG9B,GAFiBC,cAEqBC,mBAAS,KAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,OAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,mBAAS,IAAzC,qBAAOO,GAAP,MAAiBC,GAAjB,MACA,GAAoCR,mBAAS,IAA7C,qBAAOS,GAAP,MAAmBC,GAAnB,MACA,GAAsCV,mBAAS,IAA/C,qBAAOW,GAAP,MAAoBC,GAApB,MACA,GAA8BZ,mBAAS,IAAvC,qBAAOa,GAAP,MACA,IADA,MAC0Bb,mBAAS,IAAnC,qBAAOc,GAAP,MAAcC,GAAd,MACA,GAAkCf,mBAAS,MAA3C,qBAAOgB,GAAP,MAAkBC,GAAlB,MACA,GAA8BjB,mBAAS,MAAvC,qBAAOkB,GAAP,MAAgBC,GAAhB,MACA,GAAgCnB,mBAAS,MAAzC,qBAAOoB,GAAP,MAAiBC,GAAjB,MACA,GAA0CrB,mBAAS,GAAnD,qBACA,IADA,YAC8CA,mBAAS,KAAvD,qBAAOsB,GAAP,MAAwBC,GAAxB,MACA,GAAkEC,YAAQ,OAC1E,IADA,GAAQC,WAAR,GAAkCC,YACU1B,sBAA5C,qBAAO2B,GAAP,MAAuBC,GAAvB,MACMC,GAAOC,QAAQV,IAErBW,qBAAU,WAERC,OACC,CAACrB,GAAaR,EAAMM,GAAYO,GAAWE,KAE9C,IAsBMe,GAAuB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAC9BvB,GAAewB,SAASF,EAAMG,OAAOC,MAAO,KAC5ClC,EAAQ,GAFsB,2CAAH,sDAUvBmC,GAAkB,uCAAG,WAAO9B,GAAP,SAAA0B,EAAA,sDACzBzB,GAAcD,GADW,2CAAH,sDASlB+B,GAAmB,uCAAG,WAAON,EAAOO,GAAd,SAAAN,EAAA,sEACNO,YAAYpB,GAAiBmB,GADvB,cAE1BpB,GAAY,MACZW,KAH0B,2CAAH,wDAMnBW,GAAc,WAClBtB,GAAY,OAERW,GAAO,uCAAG,WAAOE,GAAP,mBAAAC,EAAA,6DACRS,EAAOzC,EAAOQ,GACdkC,EAAQlC,GAFA,SAIMmC,YAAYF,EAAMC,EAAOpC,GAAYO,GAAWE,IAJtD,QAIRoB,EAJQ,UAMZS,QAAQC,IAAIV,GACdpC,EAAeoC,EAAMG,MACrB1B,GAASuB,EAAMxB,OACfc,GAAmBU,EAAMW,eATX,2CAAH,sDAaPC,GAAc,CAAC,SAAU,OAAQ,WAAY,aAqB7CC,IAAalD,EAAYf,QAAU4C,SAASrB,IAI5C2C,IAAcnD,EAAYf,QAAU4C,QAAQrB,IAK5C4C,GAAoB,SAAC9C,GACzB,GAAIoB,IAAkBA,GAAezC,OAAS,EAAG,CAC/C,IAAMoE,EAAiB3B,GAAe4B,QAAO,SAACC,GAAD,OAAaA,EAAQC,MAAQlD,KAC1E,OAAO+C,EAAe,GAAKA,EAAe,GAAGI,MAAQ,IAGnDC,GAAqB,SAACpD,GAC1B,GAAIoB,IAAkBA,GAAezC,OAAS,EAAG,CAC/C,IAAMoE,EAAiB3B,GAAe4B,QAAO,SAACC,GAAD,OAAaA,EAAQC,MAAQlD,KAC1E,OAAO+C,EAAe,GAAKA,EAAe,GAAGM,WAAa,IAGxDC,GAAwB,SAACtD,GAC7B,GAAIoB,IAAkBA,GAAezC,OAAS,EAAG,CAC/C,IAAMoE,EAAiB3B,GAAe4B,QAAO,SAACC,GAAD,OAAaA,EAAQC,MAAQlD,KAC1E,OAAO+C,EAAe,GAAKA,EAAe,GAAGQ,MAAQ,IAML7D,EAAYf,OACLmE,GAAkB,QACbA,GAAkB,UAClBA,GAAkB,YACbA,GAAkB,aAGvF,OACE,cAAC,IAAD,CAAMU,MAAM,gBAAZ,SACE,eAAC,IAAD,CAAWC,UAAUxE,GAAuB,KAA5C,UACE,cAAC,IAAD,CACEyE,QAAQ,eACRC,MAAO,CACL,CAAEC,KAAM,YAAaC,KAAMC,IAAeC,MAC1C,CACEH,KAAM,UACNC,KAAMC,IAAeE,UAAUD,MAEjC,CAAEH,KAAM,iBACPK,OAAQ,cAAC,IAAD,CACTC,QAAQ,YACRC,UAAWC,IACXC,GAAIP,IAAeE,UAAUM,WAC7BC,UAAW,cAAC,IAAD,CAASC,KAAM,kBAJjB,2BAUb,cAAC,IAAD,CAAMC,GAAI,CAAEC,GAAI,GAAhB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEC,UAAU,MACVC,QAAS,cAAC,IAAD,CAASC,YAAY,WAAWC,UAAQ,EAACL,GAAI,CAAEM,YAAa,YACrEN,GAAI,CAAEO,GAAI,GAHZ,UAKE,cAAC,IAAD,CACExB,MAAM,QACNL,MAAOL,GAAkB,OACzBmC,QAAS7B,GAAmB,OAC5BG,MAAOD,GAAsB,OAC7BkB,KAAK,mBACLU,MAAO/F,EAAMG,QAAQ6F,KAAKC,OAE5B,cAAC,IAAD,CACE5B,MAAM,OACNL,MAAOL,GAAkB,QACzBmC,QAAS7B,GAAmB,QAC5BG,MAAOD,GAAsB,QAC7BkB,KAAK,8BACLU,MAAO/F,EAAMG,QAAQ+F,QAAQD,OAE/B,cAAC,IAAD,CACE5B,MAAM,SACNL,MAAOL,GAAkB,UACzBmC,QAAS7B,GAAmB,UAC5BG,MAAOD,GAAsB,UAC7BkB,KAAK,iBACLU,MAAO/F,EAAMG,QAAQgG,QAAQF,OAE/B,cAAC,IAAD,CACE5B,MAAM,WACNL,MAAOL,GAAkB,YACzBmC,QAAS7B,GAAmB,YAC5BG,MAAOD,GAAsB,YAC7BkB,KAAK,gBACLU,MAAO/F,EAAMG,QAAQiG,MAAMH,OAE7B,cAAC,IAAD,CACE5B,MAAM,YACNL,MAAOL,GAAkB,aACzBmC,QAAS7B,GAAmB,aAC5BG,MAAOD,GAAsB,aAC7BkB,KAAK,gBACLU,MAAO/F,EAAMG,QAAQkG,KAAKC,mBAMlC,eAAC,IAAD,WAwBE,cAAC,IAAD,CACEC,YAAa1F,GAASrB,OACtBuB,WAAYA,GACZyF,UAAW,kBA/InBjF,GAAa,WACbE,GAAW,OA+IHgF,aAAc5D,GACd6D,iBAAkB,kBAxJC,SAAC7F,GAC5B,IAAM+C,EAAiBrD,EAAYsD,QAAO,SAACC,GAAD,OAAcjD,EAAS8F,SAAS7C,EAAQW,SAClF3D,GAAY,IACZN,EAAeoD,GAqJiBgD,CAAqB/F,KAC7CS,UAAWA,GACXE,QAASA,GACTqF,YAAY,iBACZC,kBAAmB,SAAClE,GAAD,OAAWrB,GAAaqB,IAC3CmE,gBAAiB,SAACnE,GAAD,OAAWnB,GAAWmB,MAGzC,cAAC,IAAD,UACE,cAAC,IAAD,CAAgB0C,GAAI,CAAE0B,SAAU,KAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACErG,MAAOA,EACPQ,QAASA,GACT8F,UAAWxH,EACXyH,SAAU3G,EAAYf,OACtB+G,YAAa1F,GAASrB,OACtB2H,cAhPU,SAACC,GAGzBxG,EADcO,KAAYiG,GAAsB,QAAVzG,EACrB,OAAS,UAiPd,eAAC,IAAD,WAEGJ,EAAY8G,KAAI,SAACC,GAChB,IAAQvD,EAOUuD,EAPVvD,IAAKwD,EAOKD,EAPLC,UACXC,EAMgBF,EANhBE,aACAC,EAKgBH,EALhBG,cACAC,EAIgBJ,EAJhBI,YACAC,EAGgBL,EAHhBK,WACAC,EAEgBN,EAFhBM,IACAC,EACgBP,EADhBO,WAGIC,GAFYR,EAAhBS,aAEsD,IAAjClH,GAASmH,QAAQT,IAExC,OAEE,eAAC,IAAD,CACEU,OAAK,EAELC,UAAW,EACXC,KAAK,WACLtH,SAAUiH,EACV,eAAcA,EANhB,UAQE,cAAC,IAAD,CAAWM,QAAQ,WAAnB,SACE,cAAC,IAAD,CAAUC,QAASP,EAAgBQ,QAAS,kBAtQhD,SAAC7D,GACnB,IAAM8D,EAAgB1H,GAASmH,QAAQvD,GACnC+D,EAAc,IACK,IAAnBD,EACFC,EAAcA,EAAYC,OAAO5H,GAAU4D,GAChB,IAAlB8D,EACTC,EAAcA,EAAYC,OAAO5H,GAAS6H,MAAM,IACvCH,IAAkB1H,GAASrB,OAAS,EAC7CgJ,EAAcA,EAAYC,OAAO5H,GAAS6H,MAAM,GAAI,IAC3CH,EAAgB,IACzBC,EAAcA,EAAYC,OAAO5H,GAAS6H,MAAM,EAAGH,GAAgB1H,GAAS6H,MAAMH,EAAgB,KAEpGzH,GAAY0H,GA0P4DG,CAAYpB,QAEhE,cAAC,IAAD,UAAaA,IACb,cAAC,IAAD,CAAWqB,MAAO,CAAE5B,SAAU,KAA9B,SAAsC6B,YAAMnB,KAC5C,cAAC,IAAD,UAAaF,IACb,cAAC,IAAD,UAAaC,IACb,cAAC,IAAD,UAAaqB,YAAUnB,KACvB,eAAC,IAAD,WAAakB,YAAMnB,EAAkB,OAAHE,GAAlC,OACA,eAAC,IAAD,WAEE,cAAC,IAAD,CACE7C,QAAS7E,EAAU,QAAU,SAC7BoI,QAAS,SAACS,GAAD,OArPP,SAACvG,EAAOuB,GAClCpC,GAAYa,EAAMwG,eAClBnH,GAAmBkC,GAmPqBkF,CAAoBF,EAAGhF,IACvCgC,OACkB,SAAf8B,EAAyB,UAA8B,WAAfA,GAA2B,SAA2B,cAAfA,GAA8B,WAAc,QAJhI,SAOGhJ,YAAagJ,KAGhB,cAAC,IAAD,CACEnG,SAAUA,GACVS,KAAMA,GACN+G,QAASjG,GAHX,SAKGO,GAAY6D,KAAI,SAAC8B,EAAQzK,GAAT,OACf,cAAC,IAAD,CAIE4J,QAAS,SAAC9F,GAAD,OAAWM,GAAoBN,EAAOgB,GAAY9E,KAJ7D,SAMGyK,GALIA,WAUb,cAAC,IAAD,CAAWC,MAAM,QAAjB,SACE,cAAC,IAAD,CAAiBC,KAAK,YAAYC,UAAWvF,EAAKwF,SAAU,kBAlPxD,SAACD,GAC3B,IAAME,EAAgBjJ,EAAYsD,QAAO,SAACC,GAAD,OAAaA,EAAQpE,KAAO4J,KACrExI,GAAY,IACZN,EAAegJ,GA+OyEC,CAAoB1F,UA7CnFA,MAoDVN,GAAY,GACX,cAAC,IAAD,CAAUmF,MAAO,CAAEc,OAAQ,GAAKjG,IAAhC,SACE,cAAC,IAAD,CAAW2F,MAAM,SAASO,QAAS,EAAnC,4BAMLjG,IACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAW0F,MAAM,SAASO,QAAS,EAAnC,SACE,cAAC,IAAD,CAAKrE,GAAI,CAAEO,GAAI,GAAf,SACE,cAAC,IAAD,CAAgB+D,YAAa7I,oBAU7C,cAAC,IAAD,CACE8I,mBAAoB,CAAC,EAAG,GAAI,IAC5B7E,UAAU,MACV5D,MAAOA,GACPH,YAAaA,GACbR,KAAMA,EAENqJ,aAAc,SAACtH,EAAOI,IA7TP,SAACA,GACxBlC,EAAQkC,GA4TmCmH,CAAiBnH,IACpDoH,oBAAqBzH","file":"static/js/52.50362974.chunk.js","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","import { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport moment from 'moment';\nimport sumBy from 'lodash/sumBy';\n\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  TableRow,\n  Checkbox, Tabs, Tab,\n  Divider,\n  TableBody, Stack,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n  List, ListItem, ListItemText, MenuItem, Menu,\n  Button\n} from '@mui/material';\n// redux  \n\n// import TextField from '@mui/material/TextField'; \n// import DatePicker from \"@mui/lab/DatePicker\"; \n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport product, { getProducts, saveProduct } from '../../redux/slices/product';\n// utils\nimport { fDate } from '../../utils/formatTime';\nimport { fCurrency } from '../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\n// import Image from '../../components/Image';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport Iconify from '../../components/Iconify';\n// sections\nimport {\n  ProductMoreMenu,\n  ProductListHead,\n  ProductListToolbar,\n} from '../../sections/@dashboard/e-commerce/product-list';\n\nimport InvoiceAnalytic from '../../sections/@dashboard/e-commerce/InvoiceAnalytic';\nimport useTabs from '../../hooks/useTabs';\n\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'invoiceId', label: 'Invoice Id', alignRight: false },\n  { id: 'createdAt', label: 'Create at', alignRight: false },\n  { id: 'customerName', label: 'Customer Name', alignRight: false },\n  { id: 'customerPhone', label: 'Customer Phone', alignRight: false },\n  { id: 'grandTotal', label: 'Amount', alignRight: false },\n  { id: 'due', label: 'Last Due', alignRight: false },\n  { id: 'paid', label: 'Paid Status', alignRight: false },\n  // { id: 'Status', label: 'Status', alignRight: false },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function EcommerceProductList() {\n\n\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  const dispatch = useDispatch();\n\n  const [productList, setProductList] = useState([]);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [orderBy, setOrderBy] = useState('');\n  const [count, setCount] = useState(0);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const { currentTab: filterStatus, onChangeTab: onFilterStatus } = useTabs('all');\n  const [invoiceDetails, setInvoiceDetails] = useState()\n  const open = Boolean(anchorEl);\n\n  useEffect(() => {\n    // console.log('Do something after counter has changed');\n    getdata()\n  }, [rowsPerPage, page, filterName, startDate, endDate ]);\n\n  const handleRequestSort = (property) => {\n    // console.log(\"property\",property );\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n  };\n\n \n  const handleClick = (name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangeRowsPerPage = async (event) => { \n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handlePageChange = (value) => {\n    setPage(value)\n  }\n\n\n  const handleFilterByName = async (filterName) => {\n    setFilterName(filterName);\n  };\n\n  const handleClickListItem = (event, _id) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedProduct(_id)\n  };\n\n  const handleMenuItemClick = async (event, data) => { \n    const value = await saveProduct(selectedProduct, data);\n    setAnchorEl(null);\n    getdata()\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const getdata = async (event) => {\n    const skip = page * rowsPerPage;\n    const limit = rowsPerPage;\n    // console.log('filterStatus', filterStatus); \n    const value = await getProducts(skip, limit, filterName, startDate, endDate);\n    if(value){\n      console.log(value);\n    setProductList(value.data); \n    setCount(value.count);\n    setInvoiceDetails( value.totalDocData)}\n    // setPage(0);\n  };\n\n  const PAID_STATUS = ['UnPaid', 'Paid', 'Over Due', 'Cancelled'];\n\n  const handleDeleteProduct = (productId) => {\n    const deleteProduct = productList.filter((product) => product.id !== productId);\n    setSelected([]);\n    setProductList(deleteProduct);\n  };\n\n  const handleDeleteProducts = (selected) => {\n    const deleteProducts = productList.filter((product) => !selected.includes(product.name));\n    setSelected([]);\n    setProductList(deleteProducts);\n  };\n\n  const handleclearDate = () => {\n    setStartDate(null);\n    setEndDate(null);\n  }\n\n\n  // const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - productList.length) : 0;\n  const emptyRows = !productList.length && Boolean(!filterName);\n  // const filteredProducts = applySortFilter(productList , getComparator(order, orderBy), filterName );\n  // const filteredProducts = saerchFilter(  filterName );\n\n  const isNotFound = !productList.length && Boolean(filterName);\n\n\n \n\n  const getLengthByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].total : 0\n    }\n  }\n  const getPercentByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].percentage : 0\n    }\n  };\n  const getTotalPriceByStatus = (selected) => {\n    if (invoiceDetails && invoiceDetails.length > 0) {\n      const deleteProducts = invoiceDetails.filter((product) => product._id === selected)\n      return deleteProducts[0] ? deleteProducts[0].price : 0\n\n    }\n  };\n\n  const TABS = [\n    { value: ' ', label: 'All', color: 'info', count: productList.length },\n    { value: 'Paid', label: 'Paid', color: 'success', count: getLengthByStatus('Paid') },\n    { value: 'Un Paid', label: 'Unpaid', color: 'warning', count: getLengthByStatus('UnPaid') },\n    { value: 'Over Due', label: 'Overdue', color: 'error', count: getLengthByStatus('Over Due') },\n    { value: 'Cancelled', label: 'Cancelled', color: 'default', count: getLengthByStatus('Cancelled') },\n  ];\n\n  return (\n    <Page title=\" Invoice List\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Invoice List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: 'Invoice',\n              href: PATH_DASHBOARD.eCommerce.root,\n            },\n            { name: 'Invoice List' },\n          ]} action={<Button\n            variant=\"contained\"\n            component={RouterLink}\n            to={PATH_DASHBOARD.eCommerce.newProduct}\n            startIcon={<Iconify icon={'eva:plus-fill'} />}\n          >\n            New Invoice\n          </Button>}\n        />\n\n        <Card sx={{ mb: 5 }}>\n          <Scrollbar>\n            <Stack\n              direction=\"row\"\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\n              sx={{ py: 2 }}\n            >\n              <InvoiceAnalytic\n                title=\"Total\"\n                total={getLengthByStatus('all')}\n                percent={getPercentByStatus('all')}\n                price={getTotalPriceByStatus('all')}\n                icon=\"ic:round-receipt\"\n                color={theme.palette.info.main}\n              />\n              <InvoiceAnalytic\n                title=\"Paid\"\n                total={getLengthByStatus('Paid')}\n                percent={getPercentByStatus('Paid')}\n                price={getTotalPriceByStatus('Paid')}\n                icon=\"eva:checkmark-circle-2-fill\"\n                color={theme.palette.success.main}\n              />\n              <InvoiceAnalytic\n                title=\"Unpaid\"\n                total={getLengthByStatus('UnPaid')}\n                percent={getPercentByStatus('UnPaid')}\n                price={getTotalPriceByStatus('UnPaid')}\n                icon=\"eva:clock-fill\"\n                color={theme.palette.warning.main}\n              />\n              <InvoiceAnalytic\n                title=\"Over Due\"\n                total={getLengthByStatus('Over Due')}\n                percent={getPercentByStatus('Over Due')}\n                price={getTotalPriceByStatus('Over Due')}\n                icon=\"eva:bell-fill\"\n                color={theme.palette.error.main}\n              />\n              <InvoiceAnalytic\n                title=\"Cancelled\"\n                total={getLengthByStatus('Cancelled')}\n                percent={getPercentByStatus('Cancelled')}\n                price={getTotalPriceByStatus('Cancelled')}\n                icon=\"eva:file-fill\"\n                color={theme.palette.text.secondary}\n              />\n            </Stack>\n          </Scrollbar>\n        </Card>\n\n        <Card>\n     {/*      <Tabs\n            allowScrollButtonsMobile\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            value={filterStatus}\n            onChange={onFilterStatus}\n            sx={{ px: 2, bgcolor: 'background.neutral' }}\n          >\n            {TABS.map((tab) => (\n              <Tab\n                disableRipple\n                key={tab.value}\n                value={tab.value}\n                label={\n                  <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n                    <div>{tab.label}</div> \n                    <Label color={tab.color}> {tab.count} </Label>\n                  </Stack>\n                }\n              />\n            ))}\n          </Tabs> */}\n\n          <ProductListToolbar\n            numSelected={selected.length}\n            filterName={filterName}\n            clearDate={() => handleclearDate()}\n            onFilterName={handleFilterByName}\n            onDeleteProducts={() => handleDeleteProducts(selected)}\n            startDate={startDate}\n            endDate={endDate}\n            placeholder=\"Search Invoice\"\n            selecteStartdDate={(value) => setStartDate(value)}\n            selecteEnddDate={(value) => setEndDate(value)}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <ProductListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={productList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                // onSelectAllClick={handleSelectAllClick}\n                />\n\n                <TableBody>\n                  {/*  {productList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => { */}\n                  {productList.map((row) => { \n                    const { _id, invoiceId,\n                      customerName,\n                      customerPhone,\n                      invoiceDate,\n                      grandTotal,\n                      due,\n                      paidStatus,\n                      paymentType } = row;\n\n                    const isItemSelected = selected.indexOf(invoiceId) !== -1;\n\n                    return (\n\n                      <TableRow\n                        hover\n                        key={_id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onClick={() => handleClick(invoiceId)} />\n                        </TableCell>\n                        <TableCell >{invoiceId}</TableCell>\n                        <TableCell style={{ minWidth: 160 }}>{fDate(invoiceDate)}</TableCell>\n                        <TableCell >{customerName}</TableCell>\n                        <TableCell >{customerPhone}</TableCell>\n                        <TableCell >{fCurrency(grandTotal)}</TableCell>\n                        <TableCell >{fDate(invoiceDate + (due * (1000 * 60 * 60 * 24 * 30)))} </TableCell>\n                        <TableCell >\n\n                          <Label\n                            variant={isLight ? 'ghost' : 'filled'}\n                            onClick={(e) => handleClickListItem(e, _id)}\n                            color={\n                              (paidStatus === 'Paid' && 'success') || (paidStatus === 'UnPaid' && 'info') || (paidStatus === 'Cancelled' && 'warning') || 'error'\n                            }\n                          >\n                            {sentenceCase(paidStatus)}\n                          </Label>\n\n                          <Menu\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                          >\n                            {PAID_STATUS.map((option, index) => (\n                              <MenuItem\n                                key={option}\n                                // disabled={option === paidStatus}\n                                // selected={index === selectedIndex}\n                                onClick={(event) => handleMenuItemClick(event, PAID_STATUS[index])}\n                              >\n                                {option} \n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <ProductMoreMenu menu=\"eCommerce\" productId={_id} onDelete={() => handleDeleteProduct(_id)} />\n                        </TableCell>\n                        {/* <TableCell align=\"right\">{}</TableCell> */}\n\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell align=\"center\" colSpan={8} >No Record</TableCell>\n\n                    </TableRow>\n                  )}\n                </TableBody>\n\n                {isNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={8}>\n                        <Box sx={{ py: 3 }}>\n                          <SearchNotFound searchQuery={filterName} />\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={count}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            // onPageChange={(event, value) => { setPage(value) }}\n            onPageChange={(event, value) => {  handlePageChange(value) }}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction saerchFilter(search) {\n  console.log(search);\n}\n\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n /*  if (query) {\n    console.log('----', query);\n\n  } */\n\n  return stabilizedThis.map((el) => el[0]);\n}\n"],"sourceRoot":""}