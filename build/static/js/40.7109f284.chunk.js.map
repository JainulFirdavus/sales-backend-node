{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","utils/formatTime.js","components/skeleton/SkeletonPost.js","components/skeleton/SkeletonProduct.js","components/skeleton/SkeletonPostItem.js","components/skeleton/SkeletonProductItem.js","components/skeleton/SkeletonKanbanColumn.js","components/skeleton/SkeletonMailSidebarItem.js","components/skeleton/SkeletonConversationItem.js","components/LightboxModal.js","utils/uuidv4.js","sections/@dashboard/kanban/KanbanTaskCommentList.js","sections/@dashboard/kanban/KanbanTaskAttachments.js","sections/@dashboard/kanban/KanbanTaskCommentInput.js","sections/@dashboard/kanban/KanbanTaskAdd.js","sections/@dashboard/kanban/KanbanTaskDetails.js","sections/@dashboard/kanban/KanbanTaskCard.js","sections/@dashboard/kanban/KanbanColumnToolBar.js","sections/@dashboard/kanban/KanbanColumn.js","sections/@dashboard/kanban/KanbanColumnAdd.js","pages/dashboard/Kanban.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","fDate","date","format","Date","fDateTime","fDateTimeSuffix","fToNow","formatDistanceToNow","addSuffix","SkeletonPost","Skeleton","ml","SkeletonProduct","Grid","container","spacing","item","xs","md","lg","paddingTop","SkeletonPostItem","sm","mx","SkeletonProductItem","Card","Stack","p","direction","justifyContent","SkeletonKanbanColumn","gap","gridTemplateColumns","Array","_","index","Paper","SkeletonMailSidebarItem","px","py","SkeletonConversationItem","LightboxModalStyles","theme","useTheme","isRTL","ICON_COLOR","palette","grey","replace","getIcon","Icon","opacity","backgroundImage","backgroundColor","transition","transitions","create","content","styles","alpha","padding","marginLeft","outline","right","left","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","useEffect","document","body","style","toolbarButtons","animationDuration","nextSrc","prevSrc","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","uuidv4","c","r","Math","random","toString","KanbanTaskCommentList","comments","useState","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","imagesLightbox","filter","comment","messageType","message","Avatar","src","avatar","createdAt","Image","onClick","url","findIndex","handleOpenLightbox","id","mainSrc","onCloseRequest","DropZoneStyle","styled","fontSize","cursor","margin","shape","border","divider","KanbanTaskAttachments","attachments","attachment","m","UploadFile","files","setFiles","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","key","varFade","inRight","position","top","IconButton","size","filteredItems","_file","handleRemove","Iconify","KanbanTaskCommentInput","MyAvatar","OutlinedInput","fullWidth","multiline","rows","placeholder","Tooltip","title","Button","defaultTask","description","due","assignee","KanbanTaskAdd","onAddTask","onCloseAddTask","setName","completed","setCompleted","useDatePicker","dueDate","startTime","endTime","isSameDays","isSameMonths","onChangeDueDate","openPicker","onOpenPicker","onClosePicker","ClickAwayListener","onClickAway","value","onChange","event","onKeyUp","trim","borderColor","Checkbox","disableRipple","checked","checkedIcon","DisplayTime","MobileDateRangePicker","open","onClose","onOpen","renderInput","setDueDate","setOpenPicker","isSameDay","isSameMonth","newValue","typography","PRIORITIZES","LabelStyle","body2","text","secondary","KanbanTaskDetails","card","onDeleteTask","isDesktop","useResponsive","fileInputRef","useRef","taskCompleted","setTaskCompleted","prioritize","setPrioritize","Drawer","anchor","PaperProps","startIcon","prev","current","click","ref","type","Divider","Scrollbar","flexWrap","user","alt","TextField","select","option","MenuItem","my","textTransform","KanbanTaskCard","openDetails","setOpenDetails","handleOpenDetails","handleCloseDetails","handleChangeComplete","draggableId","provided","draggableProps","dragHandleProps","innerRef","boxShadow","customShadows","z1","z16","pt","duration","shortest","pl","bottom","KanbanColumnToolBar","columnName","onDelete","onUpdate","renameRef","setValue","setOpen","focus","handleClose","blur","inputRef","fontWeight","currentTarget","MenuPopover","Boolean","anchorEl","KanbanColumn","column","dispatch","useDispatch","enqueueSnackbar","useSnackbar","board","useSelector","state","kanban","cardIds","handleOpenAddTask","handleCloseAddTask","handleDeleteTask","cardId","deleteTask","columnId","handleUpdateColumn","newName","a","updateColumn","error","console","handleDeleteColumn","deleteColumn","handleAddTask","task","addTask","droppableId","droppableProps","cards","pb","KanbanColumnAdd","nameRef","handleCreateColumn","createColumn","minWidth","Kanban","getBoard","Page","Container","PATH_DASHBOARD","root","onDragEnd","result","destination","source","newColumnOrder","from","columnOrder","splice","persistColumn","start","columns","finish","startCardIds","updatedStart","finishCardIds","updatedFinish","persistCard","updatedCardIds","updatedColumn","overflowY"],"mappings":"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","file":"static/js/40.7109f284.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date) {\n  return format(new Date(date), 'dd MMMM yyyy');\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPost() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Grid, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProduct() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6} lg={7}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '100%', borderRadius: 2 }} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={5}>\n        <Skeleton variant=\"circular\" width={80} height={80} />\n        <Skeleton variant=\"text\" height={240} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n      </Grid>\n    </Grid>\n  );\n}\n","// @mui\nimport { Box, Skeleton, Grid } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostItem() {\n  return (\n    <Grid item xs={12} sm={6} md={3}>\n      <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n      <Box sx={{ display: 'flex', mt: 1.5 }}>\n        <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n        <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n      </Box>\n    </Grid>\n  );\n}\n","// @mui\nimport { Card, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProductItem() {\n  return (\n    <Card>\n      <Skeleton variant=\"rectangular\" sx={{ paddingTop: '100%' }} />\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5 }} />\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\">\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n          </Stack>\n          <Skeleton variant=\"text\" sx={{ width: 40 }} />\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, Box, Paper } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonKanbanColumn() {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gap: 3,\n        gridTemplateColumns: 'repeat(4, 1fr)',\n      }}\n    >\n      {[...Array(3)].map((_, index) => (\n        <Paper variant=\"outlined\" key={index} sx={{ p: 2.5, width: 310 }}>\n          <Stack spacing={2}>\n            <Skeleton variant=\"rectangular\" sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n            {index === 0 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n            {index !== 2 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMailSidebarItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1 }}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.25, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonConversationItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1.5 }}>\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const ICON_SIZE = 32;\n  const ICON_COLOR = theme.palette.grey[600].replace('#', '');\n\n  const getIcon = (icon) =>\n    `url(https://api.iconify.design/carbon/${icon}.svg?color=%23${ICON_COLOR}&width=${ICON_SIZE}&height=${ICON_SIZE})`;\n\n  const Icon = (icon) => ({\n    opacity: 1,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    backgroundImage: `unset`,\n    backgroundColor: 'transparent',\n    transition: theme.transitions.create('opacity'),\n    '&:before': {\n      display: 'block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      content: getIcon(icon),\n    },\n    '&:hover': {\n      opacity: 0.72,\n    },\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backgroundColor: alpha(theme.palette.grey[900], 0.96),\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent',\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center',\n            },\n            '& li:first-of-type': {\n              flexGrow: 1,\n            },\n            '& li:not(:first-of-type)': {\n              width: 40,\n              height: 40,\n              justifyContent: 'center',\n              marginLeft: theme.spacing(2),\n            },\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': Icon('zoom-in'),\n            '&.ril__zoomOutButton': Icon('zoom-out'),\n            '&.ril__closeButton': Icon('close'),\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            '&.ril__navButtonPrev': {\n              right: 'auto',\n              left: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-right' : 'arrow-left'),\n            },\n            '&.ril__navButtonNext': {\n              left: 'auto',\n              right: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-left' : 'arrow-right'),\n            },\n          },\n        },\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n\n  const customStyles = {\n    overlay: {\n      zIndex: 9999,\n    },\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={160}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Stack, Avatar, Typography } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCommentList.propTypes = {\n  comments: PropTypes.array,\n};\n\nexport default function KanbanTaskCommentList({ comments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const imagesLightbox = comments.filter((comment) => comment.messageType === 'image').map((item) => item.message);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = imagesLightbox.findIndex((index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Stack spacing={3} sx={{ py: 3, px: 2.5, bgcolor: 'background.neutral' }}>\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatar} sx={{ width: 32, height: 32 }} />\n            <div>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Image\n                  src={comment.message}\n                  onClick={() => handleOpenLightbox(comment.message)}\n                  sx={{ mt: 2, borderRadius: 1 }}\n                />\n              ) : (\n                <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                  {comment.message}\n                </Typography>\n              )}\n            </div>\n          </Stack>\n        ))}\n      </Stack>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport isString from 'lodash/isString';\nimport { useDropzone } from 'react-dropzone';\nimport { useState, useCallback } from 'react';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, IconButton } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\nimport Iconify from '../../../components/Iconify';\nimport LightboxModal from '../../../components/LightboxModal';\nimport { varFade } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  width: 64,\n  height: 64,\n  fontSize: 24,\n  display: 'flex',\n  cursor: 'pointer',\n  alignItems: 'center',\n  justifyContent: 'center',\n  margin: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  border: `dashed 1px ${theme.palette.divider}`,\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nKanbanTaskAttachments.propTypes = {\n  attachments: PropTypes.array.isRequired,\n};\n\nexport default function KanbanTaskAttachments({ attachments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const imagesLightbox = attachments;\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = imagesLightbox.findIndex((index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      {attachments.map((attachment) => (\n        <Image\n          key={attachment}\n          src={attachment}\n          onClick={() => handleOpenLightbox(attachment)}\n          sx={{\n            m: 0.5,\n            width: 64,\n            height: 64,\n            borderRadius: 1,\n            cursor: 'pointer',\n          }}\n        />\n      ))}\n\n      <UploadFile />\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction UploadFile() {\n  const [files, setFiles] = useState([]);\n\n  const handleRemove = (file) => {\n    const filteredItems = files.filter((_file) => _file !== file);\n    setFiles(filteredItems);\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <>\n      {files.map((file) => {\n        const { name, preview } = file;\n        const key = isString(file) ? file : name;\n\n        return (\n          <Box\n            key={key}\n            {...varFade().inRight}\n            sx={{\n              p: 0,\n              m: 0.5,\n              width: 64,\n              height: 64,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative',\n            }}\n          >\n            <Image\n              src={isString(file) ? file : preview}\n              sx={{\n                height: 1,\n                position: 'absolute',\n                border: (theme) => `solid 1px ${theme.palette.divider}`,\n              }}\n            />\n            <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n              <IconButton\n                size=\"small\"\n                onClick={() => handleRemove(file)}\n                sx={{\n                  p: '2px',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                  '&:hover': {\n                    bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                  },\n                }}\n              >\n                <Iconify icon={'eva:close-fill'} />\n              </IconButton>\n            </Box>\n          </Box>\n        );\n      })}\n\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <Iconify icon={'eva:plus-fill'} sx={{ color: 'text.secondary' }} />\n      </DropZoneStyle>\n    </>\n  );\n}\n","// @mui\nimport { Stack, Paper, Button, Tooltip, OutlinedInput, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MyAvatar from '../../../components/MyAvatar';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanTaskCommentInput() {\n  return (\n    <Stack direction=\"row\" spacing={2} sx={{ py: 3, px: 2.5 }}>\n      <MyAvatar />\n\n      <Paper variant=\"outlined\" sx={{ p: 1, flexGrow: 1 }}>\n        <OutlinedInput\n          fullWidth\n          multiline\n          rows={2}\n          placeholder=\"Type a message\"\n          sx={{ '& fieldset': { display: 'none' } }}\n        />\n\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" spacing={0.5}>\n            <Tooltip title=\"Add photo\">\n              <IconButton size=\"small\">\n                <Iconify icon={'ic:round-add-photo-alternate'} width={20} height={20} />\n              </IconButton>\n            </Tooltip>\n            <IconButton size=\"small\">\n              <Iconify icon={'eva:attach-2-fill'} width={20} height={20} />\n            </IconButton>\n          </Stack>\n\n          <Button variant=\"contained\">Comment</Button>\n        </Stack>\n      </Paper>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { format, isSameDay, isSameMonth } from 'date-fns';\nimport { useState } from 'react';\n// @mui\nimport { Box, Paper, Stack, Tooltip, Checkbox, IconButton, OutlinedInput, ClickAwayListener } from '@mui/material';\nimport { MobileDateRangePicker } from '@mui/lab';\n// utils\nimport uuidv4 from '../../../utils/uuidv4';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst defaultTask = {\n  attachments: [],\n  comments: [],\n  description: '',\n  due: [null, null],\n  assignee: [],\n};\n\nKanbanTaskAdd.propTypes = {\n  onAddTask: PropTypes.func,\n  onCloseAddTask: PropTypes.func,\n};\n\nexport default function KanbanTaskAdd({ onAddTask, onCloseAddTask }) {\n  const [name, setName] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate,\n    openPicker,\n    onOpenPicker,\n    onClosePicker,\n  } = useDatePicker({\n    date: [null, null],\n  });\n\n  const handleKeyUpAddTask = (event) => {\n    if (event.key === 'Enter') {\n      if (name.trim() !== '') {\n        onAddTask({ ...defaultTask, id: uuidv4(), name, due: dueDate, completed });\n      }\n    }\n  };\n\n  const handleClickAddTask = () => {\n    if (name) {\n      onAddTask({ ...defaultTask, id: uuidv4(), name, due: dueDate, completed });\n    }\n    onCloseAddTask();\n  };\n\n  const handleChangeCompleted = (event) => {\n    setCompleted(event.target.checked);\n  };\n\n  return (\n    <>\n      <ClickAwayListener onClickAway={handleClickAddTask}>\n        <Paper variant=\"outlined\" sx={{ p: 2 }}>\n          <OutlinedInput\n            multiline\n            size=\"small\"\n            placeholder=\"Task name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            onKeyUp={handleKeyUpAddTask}\n            sx={{\n              '& input': { p: 0 },\n              '& fieldset': { borderColor: 'transparent !important' },\n            }}\n          />\n\n          <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Tooltip title=\"Mark task complete\">\n              <Checkbox\n                disableRipple\n                checked={completed}\n                onChange={handleChangeCompleted}\n                icon={<Iconify icon={'eva:radio-button-off-outline'} />}\n                checkedIcon={<Iconify icon={'eva:checkmark-circle-2-outline'} />}\n              />\n            </Tooltip>\n\n            <Stack direction=\"row\" spacing={1.5} alignItems=\"center\">\n              <Tooltip title=\"Assign this task\">\n                <IconButton size=\"small\">\n                  <Iconify icon={'eva:people-fill'} width={20} height={20} />\n                </IconButton>\n              </Tooltip>\n\n              {startTime && endTime ? (\n                <DisplayTime\n                  startTime={startTime}\n                  endTime={endTime}\n                  isSameDays={isSameDays}\n                  isSameMonths={isSameMonths}\n                  onOpenPicker={onOpenPicker}\n                />\n              ) : (\n                <Tooltip title=\"Add due date\">\n                  <IconButton size=\"small\" onClick={onOpenPicker}>\n                    <Iconify icon={'eva:calendar-fill'} width={20} height={20} />\n                  </IconButton>\n                </Tooltip>\n              )}\n\n              <MobileDateRangePicker\n                open={openPicker}\n                onClose={onClosePicker}\n                onOpen={onOpenPicker}\n                value={dueDate}\n                onChange={onChangeDueDate}\n                renderInput={() => {}}\n              />\n            </Stack>\n          </Stack>\n        </Paper>\n      </ClickAwayListener>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nexport function useDatePicker({ date }) {\n  const [dueDate, setDueDate] = useState([date[0], date[1]]);\n  const [openPicker, setOpenPicker] = useState(false);\n\n  const startTime = dueDate[0] || '';\n  const endTime = dueDate[1] || '';\n\n  const isSameDays = isSameDay(new Date(startTime), new Date(endTime));\n  const isSameMonths = isSameMonth(new Date(startTime), new Date(endTime));\n\n  const handleChangeDueDate = (newValue) => {\n    setDueDate(newValue);\n  };\n\n  const handleOpenPicker = () => {\n    setOpenPicker(true);\n  };\n\n  const handleClosePicker = () => {\n    setOpenPicker(false);\n  };\n\n  return {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate: handleChangeDueDate,\n    openPicker,\n    onOpenPicker: handleOpenPicker,\n    onClosePicker: handleClosePicker,\n  };\n}\n\n// ----------------------------------------------------------------------\n\nDisplayTime.propTypes = {\n  isSameDays: PropTypes.bool,\n  isSameMonths: PropTypes.bool,\n  onOpenPicker: PropTypes.func,\n  startTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  endTime: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  sx: PropTypes.object,\n};\n\nexport function DisplayTime({ startTime, endTime, isSameDays, isSameMonths, onOpenPicker, sx }) {\n  const style = {\n    typography: 'caption',\n    cursor: 'pointer',\n    '&:hover': { opacity: 0.72 },\n  };\n\n  if (isSameMonths) {\n    return (\n      <Box onClick={onOpenPicker} sx={{ ...style, ...sx }}>\n        {isSameDays\n          ? format(new Date(endTime), 'dd MMM')\n          : `${format(new Date(startTime), 'dd')} - ${format(new Date(endTime), 'dd MMM')}`}\n      </Box>\n    );\n  }\n  return (\n    <Box onClick={onOpenPicker} sx={{ ...style, ...sx }}>\n      {format(new Date(startTime), 'dd MMM')} - {format(new Date(endTime), 'dd MMM')}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\n// @mui\nimport { MobileDateRangePicker } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Stack,\n  Drawer,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  MenuItem,\n  TextField,\n  Typography,\n  OutlinedInput,\n} from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport { IconButtonAnimate } from '../../../components/animate';\n//\nimport KanbanTaskCommentList from './KanbanTaskCommentList';\nimport KanbanTaskAttachments from './KanbanTaskAttachments';\nimport KanbanTaskCommentInput from './KanbanTaskCommentInput';\nimport { useDatePicker, DisplayTime } from './KanbanTaskAdd';\n\n// ----------------------------------------------------------------------\n\nconst PRIORITIZES = ['low', 'medium', 'hight'];\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.body2,\n  width: 140,\n  fontSize: 13,\n  flexShrink: 0,\n  color: theme.palette.text.secondary,\n}));\n\n// ----------------------------------------------------------------------\n\nKanbanTaskDetails.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  card: PropTypes.object,\n  onDeleteTask: PropTypes.func,\n};\n\nexport default function KanbanTaskDetails({ card, isOpen, onClose, onDeleteTask }) {\n  const isDesktop = useResponsive('up', 'sm');\n\n  const fileInputRef = useRef(null);\n  const [taskCompleted, setTaskCompleted] = useState(card.completed);\n  const [prioritize, setPrioritize] = useState('low');\n\n  const { name, description, due, assignee, attachments, comments } = card;\n\n  const {\n    dueDate,\n    startTime,\n    endTime,\n    isSameDays,\n    isSameMonths,\n    onChangeDueDate,\n    openPicker,\n    onOpenPicker,\n    onClosePicker,\n  } = useDatePicker({\n    date: due,\n  });\n\n  const handleAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleToggleCompleted = () => {\n    setTaskCompleted((prev) => !prev);\n  };\n\n  const handleChangePrioritize = (event) => {\n    setPrioritize(event.target.value);\n  };\n\n  return (\n    <>\n      <Drawer open={isOpen} onClose={onClose} anchor=\"right\" PaperProps={{ sx: { width: { xs: 1, sm: 480 } } }}>\n        <Stack p={2.5} direction=\"row\" alignItems=\"center\">\n          {!isDesktop && (\n            <>\n              <Tooltip title=\"Back\">\n                <IconButtonAnimate onClick={onClose} sx={{ mr: 1 }}>\n                  <Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />\n                </IconButtonAnimate>\n              </Tooltip>\n            </>\n          )}\n\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color={taskCompleted ? 'primary' : 'inherit'}\n            startIcon={!taskCompleted && <Iconify icon={'eva:checkmark-fill'} width={16} height={16} />}\n            onClick={handleToggleCompleted}\n          >\n            {taskCompleted ? 'Complete' : 'Mark complete'}\n          </Button>\n\n          <Stack direction=\"row\" spacing={1} justifyContent=\"flex-end\" flexGrow={1}>\n            <Tooltip title=\"Like this\">\n              <IconButtonAnimate size=\"small\">\n                <Iconify icon={'ic:round-thumb-up'} width={20} height={20} />\n              </IconButtonAnimate>\n            </Tooltip>\n\n            <>\n              <Tooltip title=\"Attachment\">\n                <IconButtonAnimate size=\"small\" onClick={handleAttach}>\n                  <Iconify icon={'eva:attach-2-fill'} width={20} height={20} />\n                </IconButtonAnimate>\n              </Tooltip>\n              <input ref={fileInputRef} type=\"file\" style={{ display: 'none' }} />\n            </>\n\n            <Tooltip title=\"Delete task\">\n              <IconButtonAnimate onClick={onDeleteTask} size=\"small\">\n                <Iconify icon={'eva:trash-2-outline'} width={20} height={20} />\n              </IconButtonAnimate>\n            </Tooltip>\n\n            <Tooltip title=\"More actions\">\n              <IconButtonAnimate size=\"small\">\n                <Iconify icon={'eva:more-horizontal-fill'} width={20} height={20} />\n              </IconButtonAnimate>\n            </Tooltip>\n          </Stack>\n        </Stack>\n\n        <Divider />\n\n        <Scrollbar>\n          <Stack spacing={3} sx={{ px: 2.5, py: 3 }}>\n            <OutlinedInput\n              fullWidth\n              multiline\n              size=\"small\"\n              placeholder=\"Task name\"\n              value={name}\n              sx={{\n                typography: 'h6',\n                '& .MuiOutlinedInput-notchedOutline': { borderColor: 'transparent' },\n              }}\n            />\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 1.5 }}>Assignee</LabelStyle>\n              <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n                {assignee.map((user) => (\n                  <Avatar key={user.id} alt={user.name} src={user.avatar} sx={{ m: 0.5, width: 36, height: 36 }} />\n                ))}\n                <Tooltip title=\"Add assignee\">\n                  <IconButtonAnimate sx={{ p: 1, ml: 0.5, border: (theme) => `dashed 1px ${theme.palette.divider}` }}>\n                    <Iconify icon={'eva:plus-fill'} width={20} height={20} />\n                  </IconButtonAnimate>\n                </Tooltip>\n              </Stack>\n            </Stack>\n\n            <Stack direction=\"row\" alignItems=\"center\">\n              <LabelStyle> Due date</LabelStyle>\n              <>\n                {startTime && endTime ? (\n                  <DisplayTime\n                    startTime={startTime}\n                    endTime={endTime}\n                    isSameDays={isSameDays}\n                    isSameMonths={isSameMonths}\n                    onOpenPicker={onOpenPicker}\n                    sx={{ typography: 'body2' }}\n                  />\n                ) : (\n                  <Tooltip title=\"Add assignee\">\n                    <IconButtonAnimate\n                      onClick={onOpenPicker}\n                      sx={{\n                        p: 1,\n                        ml: 0.5,\n                        border: (theme) => `dashed 1px ${theme.palette.divider}`,\n                      }}\n                    >\n                      <Iconify icon={'eva:plus-fill'} width={20} height={20} />\n                    </IconButtonAnimate>\n                  </Tooltip>\n                )}\n\n                <MobileDateRangePicker\n                  open={openPicker}\n                  onClose={onClosePicker}\n                  onOpen={onOpenPicker}\n                  value={dueDate}\n                  onChange={onChangeDueDate}\n                  renderInput={() => {}}\n                />\n              </>\n            </Stack>\n\n            <Stack direction=\"row\" alignItems=\"center\">\n              <LabelStyle>Prioritize</LabelStyle>\n              <TextField\n                fullWidth\n                select\n                size=\"small\"\n                value={prioritize}\n                onChange={handleChangePrioritize}\n                sx={{\n                  '& svg': { display: 'none' },\n                  '& fieldset': { display: 'none' },\n                  '& .MuiSelect-select': { p: 0, display: 'flex', alignItems: 'center' },\n                }}\n              >\n                {PRIORITIZES.map((option) => (\n                  <MenuItem key={option} value={option} sx={{ mx: 1, my: 0.5, borderRadius: 1 }}>\n                    <Box\n                      sx={{\n                        mr: 1,\n                        width: 14,\n                        height: 14,\n                        borderRadius: 0.5,\n                        bgcolor: 'error.main',\n                        ...(option === 'low' && { bgcolor: 'info.main' }),\n                        ...(option === 'medium' && { bgcolor: 'warning.main' }),\n                      }}\n                    />\n                    <Typography variant=\"body2\" sx={{ textTransform: 'capitalize' }}>\n                      {option}\n                    </Typography>\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Stack>\n\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 2 }}>Description</LabelStyle>\n              <OutlinedInput\n                fullWidth\n                multiline\n                rows={3}\n                size=\"small\"\n                placeholder=\"Task name\"\n                value={description}\n                sx={{ typography: 'body2' }}\n              />\n            </Stack>\n\n            <Stack direction=\"row\">\n              <LabelStyle sx={{ mt: 2 }}>Attachments</LabelStyle>\n              <Stack direction=\"row\" flexWrap=\"wrap\">\n                <KanbanTaskAttachments attachments={attachments} />\n              </Stack>\n            </Stack>\n          </Stack>\n\n          {comments.length > 0 && <KanbanTaskCommentList comments={comments} />}\n        </Scrollbar>\n\n        <Divider />\n\n        <KanbanTaskCommentInput />\n      </Drawer>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n// @mui\nimport { Paper, Typography, Box, Checkbox } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\nimport Iconify from '../../../components/Iconify';\n//\nimport KanbanTaskDetails from './KanbanTaskDetails';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCard.propTypes = {\n  card: PropTypes.object,\n  index: PropTypes.number,\n  onDeleteTask: PropTypes.func,\n};\n\nexport default function KanbanTaskCard({ card, onDeleteTask, index }) {\n  const { name, attachments } = card;\n\n  const [openDetails, setOpenDetails] = useState(false);\n\n  const [completed, setCompleted] = useState(card.completed);\n\n  const handleOpenDetails = () => {\n    setOpenDetails(true);\n  };\n\n  const handleCloseDetails = () => {\n    setOpenDetails(false);\n  };\n\n  const handleChangeComplete = (event) => {\n    setCompleted(event.target.checked);\n  };\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided) => (\n        <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n          <Paper\n            sx={{\n              px: 2,\n              width: 1,\n              position: 'relative',\n              boxShadow: (theme) => theme.customShadows.z1,\n              '&:hover': {\n                boxShadow: (theme) => theme.customShadows.z16,\n              },\n              ...(attachments.length > 0 && {\n                pt: 2,\n              }),\n            }}\n          >\n            <Box onClick={handleOpenDetails} sx={{ cursor: 'pointer' }}>\n              {attachments.length > 0 && (\n                <Box\n                  sx={{\n                    pt: '60%',\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    transition: (theme) =>\n                      theme.transitions.create('opacity', {\n                        duration: theme.transitions.duration.shortest,\n                      }),\n                    ...(completed && {\n                      opacity: 0.48,\n                    }),\n                  }}\n                >\n                  <Image src={attachments[0]} sx={{ position: 'absolute', top: 0, width: 1, height: 1 }} />\n                </Box>\n              )}\n\n              <Typography\n                noWrap\n                variant=\"subtitle2\"\n                sx={{\n                  py: 3,\n                  pl: 5,\n                  transition: (theme) =>\n                    theme.transitions.create('opacity', {\n                      duration: theme.transitions.duration.shortest,\n                    }),\n                  ...(completed && { opacity: 0.48 }),\n                }}\n              >\n                {name}\n              </Typography>\n            </Box>\n\n            <Checkbox\n              disableRipple\n              checked={completed}\n              icon={<Iconify icon={'eva:radio-button-off-outline'} />}\n              checkedIcon={<Iconify icon={'eva:checkmark-circle-2-outline'} />}\n              onChange={handleChangeComplete}\n              sx={{ position: 'absolute', bottom: 15 }}\n            />\n          </Paper>\n\n          <KanbanTaskDetails\n            card={card}\n            isOpen={openDetails}\n            onClose={handleCloseDetails}\n            onDeleteTask={() => onDeleteTask(card.id)}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useRef, useState, useEffect } from 'react';\n// @mui\nimport { Stack, OutlinedInput, MenuItem, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MenuPopover from '../../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\nKanbanColumnToolBar.propTypes = {\n  columnName: PropTypes.string,\n  onDelete: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\n\nexport default function KanbanColumnToolBar({ columnName, onDelete, onUpdate }) {\n  const renameRef = useRef(null);\n\n  const [value, setValue] = useState(columnName);\n\n  const [open, setOpen] = useState(null);\n\n  useEffect(() => {\n    if (open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const handleClickRename = () => {\n    handleClose();\n  };\n\n  const handleChangeColumnName = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleUpdateColumn = (event) => {\n    if (event.key === 'Enter' && renameRef.current) {\n      renameRef.current.blur();\n      onUpdate(value);\n    }\n  };\n\n  return (\n    <>\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1} sx={{ pt: 3 }}>\n        <OutlinedInput\n          size=\"small\"\n          placeholder=\"Section name\"\n          value={value}\n          onChange={handleChangeColumnName}\n          onKeyUp={handleUpdateColumn}\n          inputRef={renameRef}\n          sx={{\n            typography: 'h6',\n            fontWeight: 'fontWeightBold',\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent',\n            },\n          }}\n        />\n\n        <IconButton size=\"small\" onClick={handleOpen} color={open ? 'inherit' : 'default'}>\n          <Iconify icon={'eva:more-horizontal-fill'} width={20} height={20} />\n        </IconButton>\n      </Stack>\n\n      <MenuPopover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={handleClose}\n        sx={{\n          width: 'auto',\n          '& .MuiMenuItem-root': { px: 1, typography: 'body2', borderRadius: 0.75 },\n        }}\n      >\n        <MenuItem onClick={onDelete} sx={{ color: 'error.main' }}>\n          <Iconify icon={'eva:trash-2-outline'} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\n          Delete section\n        </MenuItem>\n\n        <MenuItem onClick={handleClickRename}>\n          <Iconify icon={'eva:edit-fill'} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\n          Rename section\n        </MenuItem>\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n// @mui\nimport { Paper, Stack, Button } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { deleteColumn, updateColumn, addTask, deleteTask } from '../../../redux/slices/kanban';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport KanbanAddTask from './KanbanTaskAdd';\nimport KanbanTaskCard from './KanbanTaskCard';\nimport KanbanColumnToolBar from './KanbanColumnToolBar';\n\n// ----------------------------------------------------------------------\n\nKanbanColumn.propTypes = {\n  column: PropTypes.object,\n  index: PropTypes.number,\n};\n\nexport default function KanbanColumn({ column, index }) {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { board } = useSelector((state) => state.kanban);\n  const [open, setOpen] = useState(false);\n\n  const { name, cardIds, id } = column;\n\n  const handleOpenAddTask = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleCloseAddTask = () => {\n    setOpen(false);\n  };\n\n  const handleDeleteTask = (cardId) => {\n    dispatch(deleteTask({ cardId, columnId: id }));\n  };\n\n  const handleUpdateColumn = async (newName) => {\n    try {\n      if (newName !== name) {\n        dispatch(updateColumn(id, { ...column, name: newName }));\n        enqueueSnackbar('Update success!');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteColumn = async () => {\n    try {\n      dispatch(deleteColumn(id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAddTask = (task) => {\n    dispatch(addTask({ card: task, columnId: id }));\n    handleCloseAddTask();\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <Paper\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          variant=\"outlined\"\n          sx={{ px: 2, bgcolor: 'grey.5008' }}\n        >\n          <Stack spacing={3} {...provided.dragHandleProps}>\n            <KanbanColumnToolBar columnName={name} onDelete={handleDeleteColumn} onUpdate={handleUpdateColumn} />\n\n            <Droppable droppableId={id} type=\"task\">\n              {(provided) => (\n                <Stack ref={provided.innerRef} {...provided.droppableProps} spacing={2} width={280}>\n                  {cardIds.map((cardId, index) => (\n                    <KanbanTaskCard\n                      key={cardId}\n                      onDeleteTask={handleDeleteTask}\n                      card={board?.cards[cardId]}\n                      index={index}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </Stack>\n              )}\n            </Droppable>\n\n            <Stack spacing={2} sx={{ pb: 3 }}>\n              {open && <KanbanAddTask onAddTask={handleAddTask} onCloseAddTask={handleCloseAddTask} />}\n\n              <Button\n                fullWidth\n                size=\"large\"\n                color=\"inherit\"\n                startIcon={<Iconify icon={'eva:plus-fill'} width={20} height={20} />}\n                onClick={handleOpenAddTask}\n                sx={{ fontSize: 14 }}\n              >\n                Add Task\n              </Button>\n            </Stack>\n          </Stack>\n        </Paper>\n      )}\n    </Draggable>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\n// @mui\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { createColumn } from '../../../redux/slices/kanban';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnAdd() {\n  const nameRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (open) {\n      if (nameRef.current) {\n        nameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleCreateColumn = async () => {\n    try {\n      if (name) {\n        dispatch(createColumn({ name }));\n        setName('');\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleCreateColumn();\n    }\n  };\n\n  return (\n    <Paper sx={{ minWidth: 280, width: 280 }}>\n      {!open && (\n        <Button\n          fullWidth\n          size=\"large\"\n          color=\"inherit\"\n          variant=\"outlined\"\n          startIcon={<Iconify icon={'eva:plus-fill'} width={20} height={20} />}\n          onClick={handleOpen}\n        >\n          Add section\n        </Button>\n      )}\n\n      {open && (\n        <ClickAwayListener onClickAway={handleCreateColumn}>\n          <OutlinedInput\n            fullWidth\n            placeholder=\"New section\"\n            inputRef={nameRef}\n            value={name}\n            onChange={handleChangeName}\n            onKeyUp={handleKeyUp}\n            sx={{ typography: 'h6' }}\n          />\n        </ClickAwayListener>\n      )}\n    </Paper>\n  );\n}\n","import { useEffect } from 'react';\n// @mui\nimport { Container, Stack } from '@mui/material';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getBoard, persistColumn, persistCard } from '../../redux/slices/kanban';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { SkeletonKanbanColumn } from '../../components/skeleton';\n// sections\nimport { KanbanColumn, KanbanColumnAdd } from '../../sections/@dashboard/kanban';\n\n// ----------------------------------------------------------------------\n\nexport default function Kanban() {\n  const dispatch = useDispatch();\n  const { board } = useSelector((state) => state.kanban);\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  const onDragEnd = (result) => {\n    // Reorder card\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) return;\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(board.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      dispatch(persistColumn(newColumnOrder));\n      return;\n    }\n\n    const start = board.columns[source.droppableId];\n    const finish = board.columns[destination.droppableId];\n\n    if (start.id === finish.id) {\n      const updatedCardIds = [...start.cardIds];\n      updatedCardIds.splice(source.index, 1);\n      updatedCardIds.splice(destination.index, 0, draggableId);\n\n      const updatedColumn = {\n        ...start,\n        cardIds: updatedCardIds,\n      };\n\n      dispatch(\n        persistCard({\n          ...board.columns,\n          [updatedColumn.id]: updatedColumn,\n        })\n      );\n      return;\n    }\n\n    const startCardIds = [...start.cardIds];\n    startCardIds.splice(source.index, 1);\n    const updatedStart = {\n      ...start,\n      cardIds: startCardIds,\n    };\n\n    const finishCardIds = [...finish.cardIds];\n    finishCardIds.splice(destination.index, 0, draggableId);\n    const updatedFinish = {\n      ...finish,\n      cardIds: finishCardIds,\n    };\n\n    dispatch(\n      persistCard({\n        ...board.columns,\n        [updatedStart.id]: updatedStart,\n        [updatedFinish.id]: updatedFinish,\n      })\n    );\n  };\n\n  return (\n    <Page title=\"Kanban\" sx={{ height: 1 }}>\n      <Container maxWidth={false} sx={{ height: 1 }}>\n        <HeaderBreadcrumbs\n          heading=\"Kanban\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            { name: 'Kanban' },\n          ]}\n        />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n            {(provided) => (\n              <Stack\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                spacing={3}\n                sx={{ height: 'calc(100% - 32px)', overflowY: 'hidden' }}\n              >\n                {!board.columnOrder.length ? (\n                  <SkeletonKanbanColumn />\n                ) : (\n                  board.columnOrder.map((columnId, index) => (\n                    <KanbanColumn index={index} key={columnId} column={board.columns[columnId]} />\n                  ))\n                )}\n\n                {provided.placeholder}\n                <KanbanColumnAdd />\n              </Stack>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}