{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","redux/slices/purchase.js","sections/@dashboard/purchase/PurchaseNewForm.js","pages/dashboard/PurchaseCreate.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","slice","createSlice","initialState","isLoading","error","purchases","purchase","sortBy","filters","gender","category","colors","priceRange","rating","checkout","activeStep","cart","subtotal","total","discount","shipping","billing","reducers","startLoading","state","hasError","payload","getpurchasesSuccess","getpurchaseSuccess","sortBypurchases","filterpurchases","getCart","sum","cartItem","price","quantity","addCart","isEmptyCart","_purchase","id","uniqBy","deleteCart","updateCart","filter","item","resetCart","onBackStep","onNextStep","onGotoStep","goToStep","increaseQuantity","purchaseId","decreaseQuantity","createBilling","applyDiscount","applyShipping","actions","getpurchases","skip","limit","search","from","a","axios","post","HOST_API","response","data","dispatch","getcompanyList","getpurchasesId","_id","savepurchase","paidStatus","PAID_STATUS","PAYMENT_OPTION","group","classify","DURATION_OPTION","LabelStyle","styled","theme","typography","subtitle2","palette","text","secondary","marginBottom","spacing","ProductNewForm","isEdit","currentProduct","navigate","useNavigate","enqueueSnackbar","useSnackbar","useState","companyList","setCompany","NewProductSchema","Yup","shape","amount","required","console","log","defaultValues","useMemo","dealer","dateOfPurchase","Date","now","grandTotal","vat","due","paymentType","methods","useForm","resolver","yupResolver","reset","watch","setValue","getValues","handleSubmit","isSubmitting","formState","values","useEffect","company","onSubmit","Promise","resolve","setTimeout","then","status","PATH_DASHBOARD","list","Grid","container","xs","md","Card","p","Stack","columnGap","rowGap","gridTemplateColumns","sm","label","value","onChange","newValue","moment","format","Autocomplete","freeSolo","options","getOptionLabel","option","style","renderInput","params","TextField","event","onInputChange","_","placeholder","Number","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","type","disabled","fontSize","toFixed","LoadingButton","size","loading","PurchaseCreate","themeStretch","useSettings","pathname","useDispatch","useLocation","useParams","useSelector","product","products","includes","setcurrentProduct","Page","title","Container","root"],"mappings":"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","file":"static/js/54.1663a1f8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport sum from 'lodash/sum';\nimport uniqBy from 'lodash/uniqBy';\n// utils\n// import axios from '../../utils/axios';\nimport axios from 'axios';\n//\nimport { dispatch } from '../store';\nimport {HOST_API} from '../../config'\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  purchases: [],\n  purchase: null,\n  sortBy: null,\n  filters: {\n    gender: [],\n    category: 'All',\n    colors: [],\n    priceRange: '',\n    rating: '',\n  },\n  checkout: {\n    activeStep: 0,\n    cart: [],\n    subtotal: 0,\n    total: 0,\n    discount: 0,\n    shipping: 0,\n    billing: null,\n  },\n};\n\nconst slice = createSlice({\n  name: 'purchase',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET purchaseS\n    getpurchasesSuccess(state, action) {\n      state.isLoading = false;\n      state.purchases = action.payload;\n    },\n\n    // GET purchase\n    getpurchaseSuccess(state, action) {\n      state.isLoading = false;\n      state.purchase = action.payload;\n    },\n\n    //  SORT & FILTER purchaseS\n    sortBypurchases(state, action) {\n      state.sortBy = action.payload;\n    },\n\n    filterpurchases(state, action) {\n      state.filters.gender = action.payload.gender;\n      state.filters.category = action.payload.category;\n      state.filters.colors = action.payload.colors;\n      state.filters.priceRange = action.payload.priceRange;\n      state.filters.rating = action.payload.rating;\n    },\n\n    // CHECKOUT\n    getCart(state, action) {\n      const cart = action.payload;\n\n      const subtotal = sum(cart.map((cartItem) => cartItem.price * cartItem.quantity));\n      const discount = cart.length === 0 ? 0 : state.checkout.discount;\n      const shipping = cart.length === 0 ? 0 : state.checkout.shipping;\n      const billing = cart.length === 0 ? null : state.checkout.billing;\n\n      state.checkout.cart = cart;\n      state.checkout.discount = discount;\n      state.checkout.shipping = shipping;\n      state.checkout.billing = billing;\n      state.checkout.subtotal = subtotal;\n      state.checkout.total = subtotal - discount;\n    },\n\n    addCart(state, action) {\n      const purchase = action.payload;\n      const isEmptyCart = state.checkout.cart.length === 0;\n\n      if (isEmptyCart) {\n        state.checkout.cart = [...state.checkout.cart, purchase];\n      } else {\n        state.checkout.cart = state.checkout.cart.map((_purchase) => {\n          const isExisted = _purchase.id === purchase.id;\n          if (isExisted) {\n            return {\n              ..._purchase,\n              quantity: _purchase.quantity + 1,\n            };\n          }\n          return _purchase;\n        });\n      }\n      state.checkout.cart = uniqBy([...state.checkout.cart, purchase], 'id');\n    },\n\n    deleteCart(state, action) {\n      const updateCart = state.checkout.cart.filter((item) => item.id !== action.payload);\n\n      state.checkout.cart = updateCart;\n    },\n\n    resetCart(state) {\n      state.checkout.activeStep = 0;\n      state.checkout.cart = [];\n      state.checkout.total = 0;\n      state.checkout.subtotal = 0;\n      state.checkout.discount = 0;\n      state.checkout.shipping = 0;\n      state.checkout.billing = null;\n    },\n\n    onBackStep(state) {\n      state.checkout.activeStep -= 1;\n    },\n\n    onNextStep(state) {\n      state.checkout.activeStep += 1;\n    },\n\n    onGotoStep(state, action) {\n      const goToStep = action.payload;\n      state.checkout.activeStep = goToStep;\n    },\n\n    increaseQuantity(state, action) {\n      const purchaseId = action.payload;\n      const updateCart = state.checkout.cart.map((purchase) => {\n        if (purchase.id === purchaseId) {\n          return {\n            ...purchase,\n            quantity: purchase.quantity + 1,\n          };\n        }\n        return purchase;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    decreaseQuantity(state, action) {\n      const purchaseId = action.payload;\n      const updateCart = state.checkout.cart.map((purchase) => {\n        if (purchase.id === purchaseId) {\n          return {\n            ...purchase,\n            quantity: purchase.quantity - 1,\n          };\n        }\n        return purchase;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    createBilling(state, action) {\n      state.checkout.billing = action.payload;\n    },\n\n    applyDiscount(state, action) {\n      const discount = action.payload;\n      state.checkout.discount = discount;\n      state.checkout.total = state.checkout.subtotal - discount;\n    },\n\n    applyShipping(state, action) {\n      const shipping = action.payload;\n      state.checkout.shipping = shipping;\n      state.checkout.total = state.checkout.subtotal - state.checkout.discount + shipping;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const {\n  getCart,\n  addCart,\n  resetCart,\n  onGotoStep,\n  onBackStep,\n  onNextStep,\n  deleteCart,\n  createBilling,\n  applyShipping,\n  applyDiscount,\n  increaseQuantity,\n  decreaseQuantity,\n  sortBypurchases,\n  filterpurchases,\n} = slice.actions;\n\n// ----------------------------------------------------------------------\n\n/* export function getpurchases() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post(HOST_API+'/invoice/getinvoicesId');\n      console.log(response.data);\n      if(response.data.status !==0){\n        dispatch(slice.actions.getpurchasesSuccess(response.data.response.data));\n      }else{\n        dispatch(slice.actions.hasError(response.data.response));\n      }\n\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} */\n\n\n\nexport async function  getpurchases (skip,limit,search,from,to) {\n  try {  \n\n    const response = await axios.post(`${HOST_API}purchase/list`,{'skip':skip,'limit':limit,'search':search,from,to});\n   return response.data.response\n    // if(response.data.status !==0){\n    //   dispatch(slice.actions.getpurchasesSuccess(response.data.response.data));\n    // }else{\n    //   dispatch(slice.actions.hasError(response.data.invoiceId));\n    // }\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n \n}\n\n\n\nexport async function getcompanyList ( ) { \n  try { \n    const response =await axios.post(`${HOST_API}dealers/getdealersList`,{ });\n    return response.data.response\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n}\n\nexport async function getpurchasesId (id) { \n    try { \n      const response =await axios.post(`${HOST_API}purchase/Details`,{_id:id});\n      return response.data.response\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n}\n\nexport async function savepurchase (_id,paidStatus) { \n  try { \n    const response =await axios.post(`${HOST_API}purchase/save`,{paidStatus,_id});\n    return response.data.response\n  } catch (error) {\n    dispatch(slice.actions.hasError(error));\n  }\n}\n\n// ----------------------------------------------------------------------\n\nexport function getpurchase(name) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/purchases/purchase', {\n        params: { name },\n      });\n      dispatch(slice.actions.getpurchaseSuccess(response.data.purchase));\n    } catch (error) {\n      console.error(error);\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useMemo, useState } from 'react';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\n\nimport axios from 'axios';\nimport { Card, Grid, Stack, Box, Typography, InputAdornment, Autocomplete, TextField } from '@mui/material';\n\nimport moment from 'moment';\nimport { getcompanyList } from '../../../redux/slices/purchase';\n\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\nimport {HOST_API} from '../../../config'\n// components\nimport {\n  FormProvider,\n  // RHFSwitch,\n  RHFSelect,\n  // RHFEditor,\n  RHFTextField,\n  RHFRadioGroup,\n  // RHFUploadMultiFile,\n  RHFDatePicker,\n} from '../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nconst PAID_STATUS = ['UnPaid', 'Paid', 'Over Due', 'Cancelled'];\nconst PAYMENT_OPTION = [\n  { group: 'Payment', classify: ['Card', 'Check', 'Cash'] }\n];\n\nconst DURATION_OPTION = [\n  { group: 'Duration', classify: [0, 1, 2, 3] }\n];\n\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\n\n\n// ----------------------------------------------------------------------\n\nProductNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentProduct: PropTypes.object,\n};\n\n\n\nexport default function ProductNewForm({ isEdit, currentProduct }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [companyList, setCompany] = useState([])\n  const NewProductSchema = Yup.object().shape({\n    // customerName: Yup.string().required('Customer Name is required'),\n    // purchaseId: Yup.string().required('purchase Id is required'),\n    // customerPhone: Yup.string().required('customer Phone is required'),\n    // customerAddress: Yup.string().required('Customer Address is required'),\n    // amountTwo: Yup.string().required('Amount is required'),\n    amount: Yup.string().required('Amount is required'),\n    // description: Yup.string().required('Description is required'),\n    // images: Yup.array().min(1, 'Images is required'),\n    // price: Yup.number().moreThan(0, 'Price should not be €0.00'),\n  });\n  console.log(currentProduct);\n\n  const defaultValues = useMemo(\n    () => ({\n      _id: currentProduct?._id || '',\n      purchaseId: currentProduct?.purchaseId || '',\n      dealer: currentProduct?.dealer || '',\n      // company: currentProduct?.customerPhone || '',\n      dateOfPurchase: currentProduct?.dateOfPurchase || Date.now(),\n      amount: currentProduct?.amount || '',\n      grandTotal: currentProduct?.grandTotal || 0,\n      vat: currentProduct?.vat || 10,\n      paidStatus: currentProduct?.paidStatus || PAID_STATUS[0],\n      due: currentProduct?.due || DURATION_OPTION[0].classify[0],\n      paymentType: currentProduct?.paymentType || PAYMENT_OPTION[0].classify[0],\n      // category: currentProduct?.category || CATEGORY_OPTION[0].classify[1],\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentProduct]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewProductSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n  const values = watch();\n\n  useEffect(async () => {\n    const company = await getcompanyList();\n    console.log(company)\n    setCompany(company.data)\n  }, [])\n\n  useEffect(() => {\n    if (isEdit && currentProduct) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentProduct]);\n\n  const getTotalCosts = () => values.grandTotal  ;\n\n\n  const onSubmit = async () => {\n    console.log(\"try\", values);\n    if (values._id === \"\") { delete values._id }\n    if (values.grandTotal === 0) {\n      enqueueSnackbar('Please Enter the amount', { variant: \"error\" });\n    } else {\n      try {\n\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        await axios.post(`${HOST_API}purchase/save`, values)\n          .then((response) => {\n            console.log(response);\n            if (response.data.status === 1) {\n              reset();\n              enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n              navigate(PATH_DASHBOARD.purchase.list);\n            } else {\n              enqueueSnackbar('Purchase Id already exist', { variant: \"error\" });\n            }\n\n          }, (error) => {\n            console.log(error);\n          });\n\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  };\n  const getCustomer = async (phone) => {\n\n    // console.log(getCustomerId(phone));\n    const response = axios.post(`${HOST_API}customer/customerDetails`, { 'phone': phone })\n      .then((response) => {\n        console.log('----', response.data);\n        if (response.data.status === 1) {\n          setValue('customerName', response.data.response.name)\n          setValue('customerAddress', response.data.response.address)\n          setValue('userId', response.data.response._id)\n        } else {\n          setValue('userId', '')\n          setValue('customerName', '')\n          setValue('customerAddress', '')\n        }\n        // e.preventDefault()\n\n      })\n  };\n  /* const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setValue(\n        'images',\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setValue]\n  ); */\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n\n          <Card sx={{ p: 4 }}>\n            <LabelStyle>Purchase Details</LabelStyle>\n            <Stack spacing={3}>\n              <Box\n                sx={{\n                  display: 'grid',\n                  columnGap: 2,\n                  rowGap: 3,\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n                }}\n              >\n                <RHFTextField name=\"purchaseId\" label=\"Purchase-Id\" />\n           \n  \n                <RHFDatePicker name=\"dateOfPurchase\" label=\"dateOfPurchase\"\n                  value={new Date()}\n                  onChange={(newValue) => {\n                    console.log(\"onChange\", newValue);\n                    setValue(moment(Date.now()).format(\"DD/MM/YYYY\"));\n                  }} />\n  \n\n                <Autocomplete\n                  freeSolo\n                  // value={getValues('dealer')._id}\n                  options={companyList}\n                  getOptionLabel={option => option.name}\n                  style={{ width: 300 }}\n                  renderInput={params => (\n                    <TextField {...params} label=\"Company\" variant=\"outlined\" />\n                  )}\n                  onChange={(event, newValue) => {\n                    setValue('dealer', newValue)\n                  }}\n                  onInputChange={(_, newValue) => {\n                    if (newValue) {\n                      setValue('dealer', { _id: null, name: newValue })\n                    }\n                  }}\n                />\n                {/* <RHFTextField name=\"customerPhone\" label=\"Customer Phone\" onBlur={(event) => {\n                  getCustomer(getValues('customerPhone'))\n                }\n                } /> */}\n\n              </Box>\n\n              <LabelStyle>Amount Details</LabelStyle>\n\n              <Box sx={{\n                display: 'grid',\n                columnGap: 2,\n                rowGap: 3,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(3, 1fr)' },\n              }} >\n\n\n                <RHFTextField\n                  name=\"amount\"\n                  label=\"Amount\"\n                  placeholder=\"0.00\"\n                  value={getValues('amount') === 0 ? '' : getValues('amount')}\n                  onChange={(event) => {\n                    setValue('amount', Number(event.target.value))\n                    setValue('grandTotal', Number(Number(event.target.value)) + Number(Number(event.target.value) * (getValues('vat') / 100)))\n                    // setValue('grandTotal', Number(getValues('grandTotal')).toFixed(2) )\n                  }\n                  }\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\n                    type: 'number',\n                  }}\n                />\n                <RHFTextField name=\"vat\" value={`${getValues('vat')}%`} label=\"Vat\" disabled />\n\n                <RHFTextField\n                  name=\"grandTotal\"\n                  label=\"Total\"\n                  placeholder=\"0.00\"\n                  disabled\n                  value={getValues('grandTotal') === 0 ? '' : getValues('grandTotal')}\n                  onChange={(event) => setValue('grandTotal', Number(event.target.value))}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\n                    type: 'number',\n                  }}\n                />\n\n              </Box>\n\n            </Stack>\n\n          </Card>\n        \n\n          <Card sx={{ p: 4 ,mt:2}}>\n            <LabelStyle>Purchase Details</LabelStyle>\n            <Stack spacing={3}>\n              <Box\n                sx={{\n                  display: 'grid',\n                  columnGap: 2,\n                  rowGap: 3,\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n                }}\n              >\n <Box sx={{\n                display: 'grid',\n                columnGap: 2,\n                rowGap: 3,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(3, 1fr)' },\n              }} >\n\n\n                <RHFTextField\n                  name=\"amount\"\n                  label=\"Amount\"\n                  placeholder=\"0.00\"\n                  value={getValues('amount') === 0 ? '' : getValues('amount')}\n                  onChange={(event) => {\n                    setValue('amount', Number(event.target.value))\n                    setValue('grandTotal', Number(Number(event.target.value)) + Number(Number(event.target.value) * (getValues('vat') / 100)))\n                    // setValue('grandTotal', Number(getValues('grandTotal')).toFixed(2) )\n                  }\n                  }\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\n                    type: 'number',\n                  }}\n                />\n                <RHFTextField name=\"vat\" value={`${getValues('vat')}%`} label=\"Vat\"   />\n\n              \n\n              </Box>\n                </Box>\n                </Stack>\n                </Card>\n                \n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Stack spacing={3}>\n            <Card sx={{ p: 3 }}>\n              {/* <RHFSwitch name=\"inStock\" label=\"In stock\" /> */}\n              <Stack spacing={3} mt={2}>\n                {/*   <RHFSelect name=\"paymentType\" label=\"PaymentType\">\n                  {PAYMENT_OPTION.map((category) => (\n                    <optgroup key={category.group} label={category.group}>\n                      {category.classify.map((classify) => (\n                        <option key={classify} value={classify}>\n                          {classify}\n                        </option>\n                      ))}\n                    </optgroup>\n                  ))}\n                </RHFSelect> */}\n                <RHFSelect name=\"due\" label=\"Duration\">\n                  {DURATION_OPTION.map((category) => (\n                    <optgroup key={category.group} label={category.group}>\n                      {category.classify.map((classify) => (\n                        <option key={classify} value={classify}>\n                          {classify} Month\n                        </option>\n                      ))}\n                    </optgroup>\n                  ))}\n                </RHFSelect>\n\n                <div>\n                  <LabelStyle>Status</LabelStyle>\n                  <RHFRadioGroup\n                    name=\"paidStatus\"\n                    options={PAID_STATUS}\n                    sx={{\n                      '& .MuiFormControlLabel-root': { mr: 4 },\n                    }}\n                  />\n                </div>\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                  Grand Total\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary', fontSize: 24 }}>\n                  € {getTotalCosts().toFixed(2)}\n                \n                </Typography>\n                {/* <LabelStyle>Grand Total</LabelStyle>\n                <h1 className=\"fw-bold\">€ {getTotalCosts().toFixed(2)}</h1> */}\n                <LoadingButton type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                  {!isEdit ? 'Create purchase' : 'Save Changes'}\n                </LoadingButton>\n              </Stack>\n            </Card>\n          </Stack>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { useEffect ,useState} from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getpurchasesId } from '../../redux/slices/purchase';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport ProductNewForm from '../../sections/@dashboard/purchase/PurchaseNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function PurchaseCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { products } = useSelector((state) => state.product);\n  const isEdit = pathname.includes('edit');\n  const [currentProduct,setcurrentProduct] =useState({})\n  // const currentProduct = products ? products.find((product) => paramCase(product.name) === name) : undefined;\n  // const currentProduct =   products.find((product) => paramCase(product.name) === name);\n \n  useEffect(async() => {\n    if(name){\n    const value =await getpurchasesId(name);\n    setcurrentProduct(value)}\n    // dispatch(getProductsId());\n  }, []);\n\n  return (\n    <Page title=\"Purchase: Create a new product\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new Purchase' : 'Edit Purchase'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: 'Purchase',\n              href: PATH_DASHBOARD.purchase.root,\n            },\n            { name: !isEdit ? 'New ' : `${currentProduct.purchaseId}` },\n          ]}\n        />\n\n        <ProductNewForm isEdit={isEdit} currentProduct={currentProduct} />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}