{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","utils/formatTime.js","components/InputStyle.js","components/SearchNotFound.js","components/skeleton/SkeletonPost.js","components/skeleton/SkeletonProduct.js","components/skeleton/SkeletonPostItem.js","components/skeleton/SkeletonProductItem.js","components/skeleton/SkeletonKanbanColumn.js","components/skeleton/SkeletonMailSidebarItem.js","components/skeleton/SkeletonConversationItem.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","utils/uuidv4.js","sections/@dashboard/chat/ChatRoomAttachment.js","sections/@dashboard/chat/ChatRoomOneParticipant.js","components/BadgeStatus.js","sections/@dashboard/chat/ChatRoomPopup.js","sections/@dashboard/chat/ChatRoomGroupParticipant.js","sections/@dashboard/chat/ChatRoom.js","sections/@dashboard/chat/ChatMessageItem.js","sections/@dashboard/chat/ChatMessageList.js","sections/@dashboard/chat/ChatHeaderDetail.js","sections/@dashboard/chat/ChatMessageInput.js","sections/@dashboard/chat/ChatHeaderCompose.js","sections/@dashboard/chat/ChatWindow.js","sections/@dashboard/chat/ChatAccount.js","sections/@dashboard/chat/ChatSearchResults.js","sections/@dashboard/chat/ChatContactSearch.js","sections/@dashboard/chat/ChatConversationItem.js","sections/@dashboard/chat/ChatConversationList.js","sections/@dashboard/chat/ChatSidebar.js","pages/dashboard/Chat.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","fDate","date","format","Date","fDateTime","fDateTimeSuffix","fToNow","formatDistanceToNow","addSuffix","InputStyle","styled","TextField","shouldForwardProp","prop","stretchStart","theme","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z12","breakpoints","up","borderWidth","borderColor","palette","grey","SearchNotFound","searchQuery","align","SkeletonPost","Skeleton","ml","SkeletonProduct","Grid","container","spacing","item","xs","md","lg","paddingTop","SkeletonPostItem","sm","mx","SkeletonProductItem","Card","Stack","p","direction","justifyContent","SkeletonKanbanColumn","gap","gridTemplateColumns","Array","_","index","Paper","SkeletonMailSidebarItem","px","py","SkeletonConversationItem","LightboxModalStyles","useTheme","isRTL","ICON_COLOR","replace","getIcon","Icon","opacity","backgroundImage","backgroundColor","content","styles","alpha","padding","marginLeft","outline","right","left","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","useEffect","document","body","style","toolbarButtons","animationDuration","nextSrc","prevSrc","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","RootStyle","position","PickerStyle","bottom","z20","Number","shape","border","background","paper","text","disabled","primary","divider","typography","body2","fill","subtitle2","cssStyles","bgBlur","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","event","preventDefault","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","getFileFullName","src","alt","getFileThumb","thumb","includes","getFileFormat","uuidv4","c","r","Math","random","toString","flexDirection","paddingBottom","FileItemStyle","marginTop","FileThumbStyle","CollapseButtonStyle","Button","overline","ChatRoomAttachment","conversation","isCollapse","onCollapse","totalAttachment","uniq","flatten","messages","attachments","fullWidth","endIcon","Iconify","Divider","Scrollbar","Collapse","in","file","AttachmentItem","id","createdAt","RowStyle","margin","RowIconStyle","marginRight","RowTextStyle","wordWrap","ChatRoomOneParticipant","participants","participant","undefined","pt","pb","Avatar","avatar","textAlign","address","phone","email","ownerState","status","common","white","warning","transform","error","success","info","BadgeStatus","ChatRoomPopup","onClose","open","DialogContent","paragraph","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","List","disablePadding","Participant","onShowPopup","onClosePopup","ListItemButton","ListItemAvatar","ListItemText","primaryTypographyProps","secondaryTypographyProps","ToggleButtonStyle","props","IconButton","top","z8","borderRight","neutral","SIDEBAR_WIDTH","ChatRoom","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isDesktop","useResponsive","isGroup","handleOpenSidebar","handleCloseSidebar","renderContent","participantId","prev","Drawer","anchor","ModalProps","keepMounted","marginBottom","ContentStyle","InfoStyle","ChatMessageItem","message","onOpenLightbox","sender","find","senderId","senderDetails","type","isMe","isImage","contentType","firstName","formatDistanceToNowStrict","Image","cursor","ChatMessageList","scrollRef","useRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","current","scrollTop","scrollHeight","imagesLightbox","filter","handleOpenLightbox","url","findIndex","scrollableNodeProps","ref","mainSrc","onCloseRequest","minHeight","ChatHeaderDetail","GroupAvatar","OneAvatar","capitalCase","lastActivity","AvatarGroup","max","underline","paddingLeft","ChatMessageInput","conversationId","onSend","fileInputRef","setMessage","handleAttach","click","handleSend","messageId","Input","disableUnderline","onKeyUp","key","onChange","placeholder","startAdornment","InputAdornment","endAdornment","orientation","flexItem","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipients","query","setQuery","Autocomplete","multiple","disablePortal","popupIcon","noOptionsText","handleAddRecipients","onInputChange","options","getOptionLabel","recipient","renderOption","inputValue","matches","match","parts","parse","part","highlight","renderTags","getTagProps","Chip","label","renderInput","params","ChatWindow","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","conversationKey","useParams","useSelector","state","chat","activeConversationId","conversations","byId","unreadCount","conversationSelector","mode","displayParticipants","getDetails","a","getParticipants","getConversation","console","PATH_DASHBOARD","new","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","STATUS","ChatAccount","user","useAuth","setStatus","setOpen","ICON","MyAvatar","currentTarget","MenuPopover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","arrow","pr","pl","displayName","Tooltip","MenuItem","m","Select","option","ChatSearchResults","results","onSelectContact","isFound","result","ChatContactSearch","onFocus","ClickAwayListener","InputProps","AvatarWrapperStyle","ChatConversationItem","isSelected","isOpenSidebar","onSelectConversation","details","currentUserId","otherParticipants","displayNames","reduce","names","join","displayText","lastMessage","displayLastActivity","isUnread","isOnlineGroup","slice","className","fontSize","ChatConversationList","loading","allIds","otherParticipant","username","root","handleSelectConversation","contrastText","darker","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","handleToggleSidebar","handleChangeSearch","axios","get","response","data","handleSearchSelect","visibility","Chat","themeStretch","useSettings","getConversations","getContacts","Page","Container"],"mappings":"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","file":"static/js/29.ca3226a9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date) {\n  return format(new Date(date), 'dd MMMM yyyy');\n}\n\nexport function fDateTime(date) {\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\n}\n\nexport function fTimestamp(date) {\n  return getTime(new Date(date));\n}\n\nexport function fDateTimeSuffix(date) {\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\n}\n\nexport function fToNow(date) {\n  return formatDistanceToNow(new Date(date), {\n    addSuffix: true\n  });\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst InputStyle = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'stretchStart',\n})(({ stretchStart, theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n      boxShadow: theme.customShadows.z12,\n    },\n    ...(stretchStart && {\n      width: stretchStart,\n      '&.Mui-focused': {\n        boxShadow: theme.customShadows.z12,\n        [theme.breakpoints.up('sm')]: {\n          width: stretchStart + 60,\n        },\n      },\n    }),\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\nexport default InputStyle;\n","import PropTypes from 'prop-types';\nimport { Paper, Typography } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string,\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return searchQuery ? (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\n      </Typography>\n    </Paper>\n  ) : (\n    <Typography variant=\"body2\"> Please enter keywords</Typography>\n  );\n}\n","// @mui\nimport { Box, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPost() {\n  return (\n    <>\n      <Skeleton width=\"100%\" height={560} variant=\"rectangular\" sx={{ borderRadius: 2 }} />\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\n        <Skeleton variant=\"circular\" width={64} height={64} />\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n          <Skeleton variant=\"text\" height={20} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","// @mui\nimport { Grid, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProduct() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6} lg={7}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '100%', borderRadius: 2 }} />\n      </Grid>\n      <Grid item xs={12} md={6} lg={5}>\n        <Skeleton variant=\"circular\" width={80} height={80} />\n        <Skeleton variant=\"text\" height={240} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n        <Skeleton variant=\"text\" height={40} />\n      </Grid>\n    </Grid>\n  );\n}\n","// @mui\nimport { Box, Skeleton, Grid } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonPostItem() {\n  return (\n    <Grid item xs={12} sm={6} md={3}>\n      <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ height: 200, borderRadius: 2 }} />\n      <Box sx={{ display: 'flex', mt: 1.5 }}>\n        <Skeleton variant=\"circular\" sx={{ width: 40, height: 40 }} />\n        <Skeleton variant=\"text\" sx={{ mx: 1, flexGrow: 1 }} />\n      </Box>\n    </Grid>\n  );\n}\n","// @mui\nimport { Card, Skeleton, Stack } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonProductItem() {\n  return (\n    <Card>\n      <Skeleton variant=\"rectangular\" sx={{ paddingTop: '100%' }} />\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5 }} />\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\">\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\n          </Stack>\n          <Skeleton variant=\"text\" sx={{ width: 40 }} />\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","// @mui\nimport { Stack, Skeleton, Box, Paper } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonKanbanColumn() {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gap: 3,\n        gridTemplateColumns: 'repeat(4, 1fr)',\n      }}\n    >\n      {[...Array(3)].map((_, index) => (\n        <Paper variant=\"outlined\" key={index} sx={{ p: 2.5, width: 310 }}>\n          <Stack spacing={2}>\n            <Skeleton variant=\"rectangular\" sx={{ paddingTop: '75%', borderRadius: 1.5 }} />\n            {index === 0 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n            {index !== 2 && (\n              <Skeleton variant=\"rectangular\" sx={{ paddingTop: '25%', borderRadius: 1.5 }} />\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonMailSidebarItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1 }}>\n      <Skeleton variant=\"circular\" width={32} height={32} />\n      <Skeleton variant=\"text\" sx={{ width: 0.25, height: 16 }} />\n    </Stack>\n  );\n}\n","// @mui\nimport { Stack, Skeleton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nexport default function SkeletonConversationItem() {\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1.5 }}>\n      <Skeleton variant=\"circular\" width={48} height={48} />\n\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16 }} />\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12 }} />\n      </Stack>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const ICON_SIZE = 32;\n  const ICON_COLOR = theme.palette.grey[600].replace('#', '');\n\n  const getIcon = (icon) =>\n    `url(https://api.iconify.design/carbon/${icon}.svg?color=%23${ICON_COLOR}&width=${ICON_SIZE}&height=${ICON_SIZE})`;\n\n  const Icon = (icon) => ({\n    opacity: 1,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    backgroundImage: `unset`,\n    backgroundColor: 'transparent',\n    transition: theme.transitions.create('opacity'),\n    '&:before': {\n      display: 'block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      content: getIcon(icon),\n    },\n    '&:hover': {\n      opacity: 0.72,\n    },\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backgroundColor: alpha(theme.palette.grey[900], 0.96),\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent',\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center',\n            },\n            '& li:first-of-type': {\n              flexGrow: 1,\n            },\n            '& li:not(:first-of-type)': {\n              width: 40,\n              height: 40,\n              justifyContent: 'center',\n              marginLeft: theme.spacing(2),\n            },\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': Icon('zoom-in'),\n            '&.ril__zoomOutButton': Icon('zoom-out'),\n            '&.ril__closeButton': Icon('close'),\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            '&.ril__navButtonPrev': {\n              right: 'auto',\n              left: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-right' : 'arrow-left'),\n            },\n            '&.ril__navButtonNext': {\n              left: 'auto',\n              right: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-left' : 'arrow-right'),\n            },\n          },\n        },\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n\n  const customStyles = {\n    overlay: {\n      zIndex: 9999,\n    },\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={160}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","import 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, IconButton, ClickAwayListener } from '@mui/material';\n// utils\nimport cssStyles from '../utils/cssStyles';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)({\n  position: 'relative',\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary,\n    },\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled,\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    ...cssStyles().bgBlur({ color: theme.palette.background.paper }),\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected,\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool,\n};\n\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji) => setValue(value + emoji?.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (event) => {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important',\n            }),\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Iconify icon={'eva:smiling-face-fill'} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","// components\nimport Image from '../components/Image';\nimport Iconify from '../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl = '') {\n  return (fileUrl && fileUrl.split('.').pop()) || '';\n}\n\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = (name) => (\n  <Image\n    src={`https://minimal-assets-api.vercel.app/assets/icons/file/${name}.svg`}\n    alt={name}\n    sx={{ width: 28, height: 28 }}\n  />\n);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'video':\n      thumb = getIcon('format_video');\n      break;\n    case 'word':\n      thumb = getIcon('format_word');\n      break;\n    case 'excel':\n      thumb = getIcon('format_excel');\n      break;\n    case 'powerpoint':\n      thumb = getIcon('format_powerpoint');\n      break;\n    case 'pdf':\n      thumb = getIcon('format_pdf');\n      break;\n    case 'photoshop':\n      thumb = getIcon('format_photoshop');\n      break;\n    case 'illustrator':\n      thumb = getIcon('format_ai');\n      break;\n    case 'image':\n      thumb = <Image src={fileUrl} alt={fileUrl} sx={{ height: 1 }} />;\n      break;\n    default:\n      thumb = <Iconify icon={'eva:file-fill'} sx={{ width: 28, height: 28 }} />;\n  }\n  return thumb;\n}\n","/* eslint-disable */\n// ----------------------------------------------------------------------\n\nexport default function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import PropTypes from 'prop-types';\nimport uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@mui/material';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2),\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5),\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16],\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomAttachment.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse }) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\n\n  return (\n    <RootStyle>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  file: PropTypes.object,\n  fileUrl: PropTypes.string,\n};\n\nfunction AttachmentItem({ file, fileUrl }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  margin: theme.spacing(1.5, 0),\n}));\n\nconst RowIconStyle = styled(Iconify)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary,\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...theme.typography.body2,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomOneParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Box sx={{ px: 2.5, pb: 1 }}>\n          <RowStyle>\n            <RowIconStyle icon={'eva:pin-fill'} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:phone-fill'} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </RowStyle>\n          <RowStyle>\n            <RowIconStyle icon={'eva:email-fill'} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </RowStyle>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, ownerState }) => {\n  const { status, size } = ownerState;\n\n  return {\n    width: 10,\n    height: 10,\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:before, &:after': {\n      content: \"''\",\n      borderRadius: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n\n    ...(size === 'small' && { width: 8, height: 8 }),\n\n    ...(size === 'large' && { width: 12, height: 12 }),\n\n    ...(status === 'offline' && { backgroundColor: 'transparent' }),\n\n    ...(status === 'away' && {\n      backgroundColor: theme.palette.warning.main,\n      '&:before': {\n        width: 2,\n        height: 4,\n        transform: 'translateX(1px) translateY(-1px)',\n      },\n      '&:after': {\n        width: 2,\n        height: 4,\n        transform: 'translateY(1px) rotate(125deg)',\n      },\n    }),\n\n    ...(status === 'busy' && {\n      backgroundColor: theme.palette.error.main,\n      '&:before': { width: 6, height: 2 },\n    }),\n\n    ...(status === 'online' && {\n      backgroundColor: theme.palette.success.main,\n    }),\n\n    ...(status === 'invisible' && {\n      backgroundColor: theme.palette.text.disabled,\n      '&:before': {\n        width: 6,\n        height: 6,\n        borderRadius: '50%',\n      },\n    }),\n\n    ...(status === 'unread' && {\n      backgroundColor: theme.palette.info.main,\n    }),\n  };\n});\n\n// ----------------------------------------------------------------------\n\nBadgeStatus.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  status: PropTypes.oneOf(['away', 'busy', 'unread', 'online', 'offline', 'invisible']),\n};\n\nexport default function BadgeStatus({ size = 'medium', status = 'offline', ...other }) {\n  return <RootStyle ownerState={{ status, size }} {...other} />;\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Typography, DialogContent } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport { DialogAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5),\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomPopup.propTypes = {\n  participant: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose }) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96,\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <Iconify icon={'eva:pin-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:phone-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <Iconify icon={'eva:email-fill'} sx={{ mr: 1, width: 16, height: 16, color: 'text.disabled' }} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n//\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomGroupParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  selectUserId: PropTypes.string,\n  onShowPopupUserInfo: PropTypes.func,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func,\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse,\n}) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse} sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  participant: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool,\n  onClosePopup: PropTypes.func,\n  onShowPopup: PropTypes.func,\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst SIDEBAR_WIDTH = 240;\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatRoom({ conversation, participants }) {\n  const theme = useTheme();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n\n  const [showInfo, setShowInfo] = useState(true);\n\n  const [selectUser, setSelectUser] = useState(null);\n\n  const [showAttachment, setShowAttachment] = useState(true);\n\n  const [showParticipants, setShowParticipants] = useState(true);\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <ToggleButtonStyle\n        onClick={handleToggleSidebar}\n        sx={{\n          ...(openSidebar && isDesktop && { right: SIDEBAR_WIDTH }),\n        }}\n      >\n        <Iconify width={16} height={16} icon={openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'} />\n      </ToggleButtonStyle>\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          anchor=\"right\"\n          variant=\"persistent\"\n          sx={{\n            height: 1,\n            width: SIDEBAR_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openSidebar && { width: '0px' }),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: SIDEBAR_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': {\n              width: SIDEBAR_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Avatar, Box, Typography } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3),\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary,\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func,\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox }) {\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender?.avatar, name: sender?.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto',\n          }),\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32, mr: 2 }} />\n        )}\n\n        <div>\n          <InfoStyle\n            variant=\"caption\"\n            sx={{\n              ...(isMe && { justifyContent: 'flex-end' }),\n            }}\n          >\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true,\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && { color: 'grey.800', bgcolor: 'primary.lighter' }),\n              ...(isImage && { p: 0 }),\n            }}\n          >\n            {isImage ? (\n              <Image\n                alt=\"attachment\"\n                src={message.body}\n                onClick={() => onOpenLightbox(message.body)}\n                sx={{ borderRadius: 1, cursor: 'pointer', '&:hover': { opacity: 0.8 } }}\n              />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </div>\n      </Box>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../../components/Scrollbar';\nimport LightboxModal from '../../../components/LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired,\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef(null);\n\n  const [openLightbox, setOpenLightbox] = useState(false);\n\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = imagesLightbox.findIndex((index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, height: 1 }}>\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={handleOpenLightbox}\n          />\n        ))}\n      </Scrollbar>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { capitalCase } from 'change-case';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup, IconButton } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Iconify from '../../../components/Iconify';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3),\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nexport default function ChatHeaderDetail({ participants }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle>\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton>\n        <Iconify icon=\"eva:phone-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:video-fill\" width={20} height={20} />\n      </IconButton>\n      <IconButton>\n        <Iconify icon=\"eva:more-vertical-fill\" width={20} height={20} />\n      </IconButton>\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nOneAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction OneAvatar({ participants }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined || !participant.status) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity || '')}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nGroupAvatar.propTypes = {\n  participants: PropTypes.array.isRequired,\n};\n\nfunction GroupAvatar({ participants }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 },\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Iconify icon=\"eva:arrow-ios-forward-fill\" />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useRef, useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Stack, Input, Divider, IconButton, InputAdornment } from '@mui/material';\n// utils\nimport uuidv4 from '../../../utils/uuidv4';\n// components\nimport Iconify from '../../../components/Iconify';\nimport EmojiPicker from '../../../components/EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2),\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  onSend: PropTypes.func,\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend }) {\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend && conversationId) {\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0',\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={(event) => setMessage(event.target.value)}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={1} sx={{ flexShrink: 0, mr: 1.5 }}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"ic:round-add-photo-alternate\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Iconify icon=\"eva:attach-2-fill\" width={22} height={22} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Iconify icon=\"eva:mic-fill\" width={22} height={22} />\n            </IconButton>\n          </Stack>\n        }\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Iconify icon=\"ic:round-send\" width={22} height={22} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3),\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8,\n    },\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`,\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipients: PropTypes.func,\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipients }) {\n  const [query, setQuery] = useState('');\n\n  const handleAddRecipients = (recipients) => {\n    setQuery('');\n    onAddRecipients(recipients);\n  };\n\n  return (\n    <RootStyle>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={(event, value) => handleAddRecipients(value)}\n          onInputChange={(event, value) => setQuery(value)}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <Box component=\"li\" sx={{ p: '12px !important' }} {...props}>\n                <Box\n                  sx={{\n                    mr: 1.5,\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative',\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter,\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main',\n                      }),\n                    }}\n                  >\n                    <Iconify icon=\"eva:checkmark-fill\" width={20} height={20} />\n                  </Box>\n                </Box>\n\n                {parts.map((part, index) => (\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\n                    {part.text}\n                  </Typography>\n                ))}\n              </Box>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { id, name, avatar } = recipient;\n              return (\n                <Chip\n                  {...getTagProps({ index })}\n                  key={id}\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                />\n              );\n            })\n          }\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Box, Divider, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation,\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state) => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = activeConversationId ? conversations.byId[activeConversationId] : null;\n  if (conversation) {\n    return conversation;\n  }\n  const initState = {\n    id: '',\n    messages: [],\n    participants: [],\n    unreadCount: 0,\n    type: '',\n  };\n  return initState;\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\n  const conversation = useSelector((state) => conversationSelector(state));\n\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        await dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipients = (recipients) => {\n    dispatch(addRecipients(recipients));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Stack sx={{ flexGrow: 1, minWidth: '1px' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipients={handleAddRecipients}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Stack sx={{ flexGrow: 1 }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Stack>\n\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\n      </Box>\n    </Stack>\n  );\n}\n","import { useState } from 'react';\nimport { capitalCase } from 'change-case';\n// @mui\nimport { Box, List, Stack, Select, Divider, Tooltip, MenuItem, Typography, IconButton } from '@mui/material';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MyAvatar from '../../../components/MyAvatar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n\n  const [status, setStatus] = useState('online');\n\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const ICON = {\n    mr: 2,\n    width: 20,\n    height: 20,\n  };\n\n  return (\n    <>\n      <Box sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <MenuPopover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n        arrow=\"left-top\"\n        sx={{ p: 0, ml: 0.5, width: 'auto' }}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ py: 2, pr: 1, pl: 2.5 }}>\n          <div>\n            <Typography noWrap variant=\"subtitle1\">\n              {user?.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user?.email}\n            </Typography>\n          </div>\n\n          <Tooltip title=\"Log out\">\n            <IconButton color=\"error\">\n              <Iconify icon=\"ic:round-power-settings-new\" width={20} height={20} />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n\n        <Divider />\n\n        <List\n          sx={{\n            px: 1,\n            '& .MuiMenuItem-root': {\n              py: 1,\n              px: 2,\n              typography: 'body2',\n              borderRadius: 0.75,\n            },\n          }}\n        >\n          <MenuItem>\n            <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5, flexShrink: 0 }} />\n\n            <Select\n              native\n              fullWidth\n              value={status}\n              onChange={(event) => setStatus(event.target.value)}\n              sx={{\n                ml: 2,\n                '& svg': { display: `none` },\n                '& select': { p: 0, typography: 'body2' },\n                '& fieldset': { display: 'none' },\n              }}\n            >\n              {STATUS.map((option) => (\n                <option key={option} value={option}>\n                  {capitalCase(option)}\n                </option>\n              ))}\n            </Select>\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"ic:round-account-box\" sx={{ ...ICON }} />\n            Profile\n          </MenuItem>\n\n          <MenuItem>\n            <Iconify icon=\"eva:settings-2-fill\" sx={{ ...ICON }} />\n            Settings\n          </MenuItem>\n        </List>\n      </MenuPopover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nChatSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onSelectContact: PropTypes.func,\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3,\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2',\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { InputAdornment, ClickAwayListener } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport InputStyle from '../../../components/InputStyle';\n\n// ----------------------------------------------------------------------\n\nChatContactSearch.propTypes = {\n  query: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClickAway: PropTypes.func,\n};\n\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <InputStyle\n        fullWidth\n        size=\"small\"\n        value={query}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder=\"Search contacts...\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n            </InputAdornment>\n          ),\n        }}\n        sx={{ mt: 2 }}\n      />\n    </ClickAwayListener>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material';\n//\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all'),\n}));\n\nconst AvatarWrapperStyle = styled('div')({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' },\n});\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\nChatConversationItem.propTypes = {\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  isOpenSidebar: PropTypes.bool,\n  onSelectConversation: PropTypes.func,\n};\n\nexport default function ChatConversationItem({ isSelected, conversation, isOpenSidebar, onSelectConversation }) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = conversation.messages[conversation.messages.length - 1].createdAt;\n\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' }),\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n                  },\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 },\n              },\n            }),\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && (\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary',\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column',\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false,\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// @mui\nimport { List } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { SkeletonConversationItem } from '../../../components/skeleton';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string,\n  sx: PropTypes.object,\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, sx, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      if (otherParticipant?.username) {\n        conversationKey = otherParticipant?.username;\n      }\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  const loading = !conversations.allIds.length;\n\n  return (\n    <List disablePadding sx={sx} {...other}>\n      {(loading ? [...Array(12)] : conversations.allIds).map((conversationId, index) =>\n        conversationId ? (\n          <ChatConversationItem\n            key={conversationId}\n            isOpenSidebar={isOpenSidebar}\n            conversation={conversations.byId[conversationId]}\n            isSelected={activeConversationId === conversationId}\n            onSelectConversation={() => handleSelectConversation(conversationId)}\n          />\n        ) : (\n          <SkeletonConversationItem key={index} />\n        )\n      )}\n    </List>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Stack, Drawer, IconButton } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\n//\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\n  left: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(13),\n  borderRadius: `0 12px 12px 0`,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  boxShadow: theme.customShadows.primary,\n  '&:hover': {\n    backgroundColor: theme.palette.primary.darker,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst SIDEBAR_WIDTH = 320;\nconst SIDEBAR_COLLAPSE_WIDTH = 96;\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [isSearchFocused, setSearchFocused] = useState(false);\n\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const displayResults = searchQuery && isSearchFocused;\n\n  const isCollapse = isDesktop && !openSidebar;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop, pathname]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value },\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  const renderContent = (\n    <>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          {!isCollapse && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <IconButton onClick={handleToggleSidebar}>\n            <Iconify\n              width={20}\n              height={20}\n              icon={openSidebar ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\n            />\n          </IconButton>\n\n          {!isCollapse && (\n            <IconButton onClick={() => navigate(PATH_DASHBOARD.chat.new)}>\n              <Iconify icon={'eva:edit-fill'} width={20} height={20} />\n            </IconButton>\n          )}\n        </Stack>\n\n        {!isCollapse && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\n        )}\n      </Scrollbar>\n    </>\n  );\n\n  return (\n    <>\n      {!isDesktop && (\n        <ToggleButtonStyle onClick={handleToggleSidebar}>\n          <Iconify width={16} height={16} icon={'eva:people-fill'} />\n        </ToggleButtonStyle>\n      )}\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          variant=\"persistent\"\n          sx={{\n            width: SIDEBAR_WIDTH,\n            transition: theme.transitions.create('width'),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: SIDEBAR_WIDTH,\n            },\n            ...(isCollapse && {\n              width: SIDEBAR_COLLAPSE_WIDTH,\n              '& .MuiDrawer-paper': {\n                width: SIDEBAR_COLLAPSE_WIDTH,\n                position: 'static',\n                transform: 'none !important',\n                visibility: 'visible !important',\n              },\n            }),\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': { width: SIDEBAR_WIDTH },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\n// @mui\nimport { Card, Container } from '@mui/material';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../sections/@dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}