{"version":3,"sources":["../../src/index.ts","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","sections/pricing/PricingPlanCard.js","pages/Pricing.js"],"names":["DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","noCase","input","options","splitRegexp","stripRegexp","transform","lowerCase","delimiter","result","replace","start","end","length","charAt","slice","split","map","join","re","value","RegExp","reduce","subDays","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addDays","subMonths","addMonths","sub","date","duration","Date","NaN","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","getTime","RootStyle","styled","Card","theme","maxWidth","margin","display","position","alignItems","flexDirection","padding","spacing","breakpoints","up","PricingPlanCard","card","index","subscription","icon","price","caption","lists","labelAction","Label","color","sx","top","right","Typography","variant","Box","justifyContent","my","mx","gutterBottom","component","alignSelf","textTransform","width","height","mt","Stack","item","direction","typography","isAvailable","Iconify","text","Button","fullWidth","size","disabled","minHeight","paddingTop","paddingBottom","Pricing","Page","title","Container","align","paragraph","mr","Switch","ml","Grid","container","_pricingPlans","xs","md"],"mappings":"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","file":"static/js/55.f6f675d9.chunk.js","sourcesContent":["import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Card, Button, Typography, Box, Stack } from '@mui/material';\n// components\nimport Label from '../../components/Label';\nimport Iconify from '../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  padding: theme.spacing(3),\n  [theme.breakpoints.up(414)]: {\n    padding: theme.spacing(5),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nPricingPlanCard.propTypes = {\n  index: PropTypes.number,\n  card: PropTypes.object,\n};\n\nexport default function PricingPlanCard({ card, index }) {\n  const { subscription, icon, price, caption, lists, labelAction } = card;\n\n  return (\n    <RootStyle>\n      {index === 1 && (\n        <Label\n          color=\"info\"\n          sx={{\n            top: 16,\n            right: 16,\n            position: 'absolute',\n          }}\n        >\n          POPULAR\n        </Label>\n      )}\n\n      <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n        {subscription}\n      </Typography>\n\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', my: 2 }}>\n        {index === 1 || index === 2 ? (\n          <Typography variant=\"subtitle1\" sx={{ color: 'text.secondary' }}>\n            $\n          </Typography>\n        ) : (\n          ''\n        )}\n        <Typography variant=\"h2\" sx={{ mx: 1 }}>\n          {price === 0 ? 'Free' : price}\n        </Typography>\n        {index === 1 || index === 2 ? (\n          <Typography\n            gutterBottom\n            component=\"span\"\n            variant=\"subtitle2\"\n            sx={{\n              alignSelf: 'flex-end',\n              color: 'text.secondary',\n            }}\n          >\n            /mo\n          </Typography>\n        ) : (\n          ''\n        )}\n      </Box>\n\n      <Typography\n        variant=\"caption\"\n        sx={{\n          color: 'primary.main',\n          textTransform: 'capitalize',\n        }}\n      >\n        {caption}\n      </Typography>\n\n      <Box sx={{ width: 80, height: 80, mt: 3 }}>{icon}</Box>\n\n      <Stack component=\"ul\" spacing={2} sx={{ my: 5, width: 1 }}>\n        {lists.map((item) => (\n          <Stack\n            key={item.text}\n            component=\"li\"\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={1.5}\n            sx={{ typography: 'body2', color: item.isAvailable ? 'text.primary' : 'text.disabled' }}\n          >\n            <Iconify icon={'eva:checkmark-fill'} sx={{ width: 20, height: 20 }} />\n            <Typography variant=\"body2\">{item.text}</Typography>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Button fullWidth size=\"large\" variant=\"contained\" disabled={index === 0}>\n        {labelAction}\n      </Button>\n    </RootStyle>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Grid, Switch, Container, Typography, Stack } from '@mui/material';\n// _mock_\nimport { _pricingPlans } from '../_mock';\n// components\nimport Page from '../components/Page';\n// sections\nimport { PricingPlanCard } from '../sections/pricing';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: '100%',\n  paddingTop: theme.spacing(15),\n  paddingBottom: theme.spacing(10),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Pricing() {\n  return (\n    <Page title=\"Pricing\">\n      <RootStyle>\n        <Container>\n          <Typography variant=\"h3\" align=\"center\" paragraph>\n            Flexible plans for your\n            <br /> community&apos;s size and needs\n          </Typography>\n          <Typography align=\"center\" sx={{ color: 'text.secondary' }}>\n            Choose your plan and make modern online conversation magic\n          </Typography>\n\n          <Box sx={{ my: 5 }}>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n              <Typography variant=\"overline\" sx={{ mr: 1.5 }}>\n                MONTHLY\n              </Typography>\n              <Switch />\n              <Typography variant=\"overline\" sx={{ ml: 1.5 }}>\n                YEARLY (save 10%)\n              </Typography>\n            </Stack>\n            <Typography variant=\"caption\" align=\"right\" sx={{ color: 'text.secondary', display: 'block' }}>\n              * Plus applicable taxes\n            </Typography>\n          </Box>\n\n          <Grid container spacing={3}>\n            {_pricingPlans.map((card, index) => (\n              <Grid item xs={12} md={4} key={card.subscription}>\n                <PricingPlanCard card={card} index={index} />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}