{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","../../src/index.ts","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","redux/slices/user.js","sections/@dashboard/user/UserNewForm.js","pages/dashboard/UserCreate.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","skipSx","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","push","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getUserList","skip","limit","search","from","a","axios","post","HOST_API","response","data","getUsersId","id","console","log","_id","capitalCaseTransform","input","toLowerCase","capitalCase","options","delimiter","transform","UserNewForm","isEdit","currentUser","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","shape","required","email","phone","address","defaultValues","useMemo","country","state","city","zipCode","avatarUrl","isVerified","status","company","role","methods","useForm","resolver","yupResolver","reset","watch","handleSubmit","setValue","isSubmitting","formState","values","useEffect","onSubmit","Promise","resolve","setTimeout","then","PATH_DASHBOARD","user","list","error","Grid","container","item","xs","md","Card","p","columnGap","rowGap","gridTemplateColumns","sm","label","Stack","LoadingButton","type","loading","py","px","Label","textTransform","position","top","right","UserCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","useState","setCurrentUser","value","Page","title","Container"],"mappings":"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","file":"static/js/36.d72a7f4e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","\nimport axios from 'axios';\nimport {HOST_API} from '../../config'\n\nexport async function  getUserList (skip,limit,search,from,to) {\n    try { \n      const response = await axios.post(`${HOST_API}customers/customers-list`,{'skip':skip,'limit':limit,'search':search,from,to});\n     return response.data.response\n      // if(response.data.status !==0){\n      //   dispatch(slice.actions.getUsersSuccess(response.data.response.data));\n      // }else{\n      //   dispatch(slice.actions.hasError(response.data.invoiceId));\n      // }\n    } catch (error) {\n        return []\n      \n    }\n   \n  }\n  \n  export async function getUsersId (id) { \n    try { \n        console.log(id);\n        const response =await axios.post(`${HOST_API}customer/customerDetails`,{_id:id});\n        return response.data.response\n      } catch (error) {\n        return []\n        \n      }\n  }\n  \n  export async function saveUser (_id,paidStatus) { \n    try { \n      const response =await axios.post(`${HOST_API}invoice/save`,{paidStatus,_id});\n      return response.data.response\n    } catch (error) {\n        return []\n    //   dispatch(slice.actions.hasError(error));\n    }\n  }\n  ","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack  } from '@mui/material'; \n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// _mock\n// import { countries } from '../../../_mock';\n// components\nimport Label from '../../../components/Label';\nimport { FormProvider, RHFTextField } from '../../../components/hook-form';\nimport {HOST_API} from '../../../config'\n\n// ----------------------------------------------------------------------\n\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object,\n};\n\nexport default function UserNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phone: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    // country: Yup.string().required('country is required'),\n    // company: Yup.string().required('Company is required'),\n    // state: Yup.string().required('State is required'),\n    // city: Yup.string().required('City is required'),\n    // role: Yup.string().required('Role Number is required'),\n    // avatarUrl: Yup.mixed().test('required', 'Avatar is required', (value) => value !== ''),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      _id: currentUser?._id || '',\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phone: currentUser?.phone || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || '',\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      company: currentUser?.company || '',\n      role: currentUser?.role || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentUser]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch, \n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  useEffect(() => {\n    if (isEdit && currentUser) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentUser]);\n\n  const onSubmit = async () => {\n    console.log(values);\n    if (values._id === \"\") { delete values._id }\n\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      await axios.post(`${HOST_API}customers/customers-save`, values).then((response) => {\n          if(response.data.status ===1){\n            reset();\n            enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n            navigate(PATH_DASHBOARD.user.list);\n          }else{\n            enqueueSnackbar('Customer already exist' ,{ variant: \"error\" });\n          }\n        })\n     \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n      \n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              sx={{\n                display: 'grid',\n                columnGap: 2,\n                rowGap: 3,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(3, 1fr)' },\n              }}\n            >\n              <RHFTextField name=\"name\" label=\"Full Name\" />\n              <RHFTextField name=\"email\" label=\"Email Address\" />\n              <RHFTextField name=\"phone\" label=\"Phone Number\" />\n\n              {/* <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\n                <option value=\"\" />\n                {countries.map((option) => (\n                  <option key={option.code} value={option.label}>\n                    {option.label}\n                  </option>\n                ))}\n              </RHFSelect> */}\n\n              {/* <RHFTextField name=\"state\" label=\"State/Region\" />\n              <RHFTextField name=\"city\" label=\"City\" /> */}\n              <RHFTextField name=\"address\" label=\"Address\" />\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\n              {/* <RHFTextField name=\"company\" label=\"Company\" /> */}\n              {/* <RHFTextField name=\"role\" label=\"Role\" /> */}\n            </Box>\n\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Create User' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n          <Grid item xs={12} md={4}>\n          <Card sx={{ py: 10, px: 3 }}>\n            { isEdit && (\n              <Label\n                color={values.status !== 'active' ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status}\n              </Label>\n            )}\n\n            <Box sx={{ mb: 5 }}>\n              {/* <RHFUploadAvatar\n                name=\"avatarUrl\"\n                accept=\"image/*\"\n                maxSize={3145728}\n                onDrop={handleDrop}\n                helperText={\n                  <Typography\n                    variant=\"caption\"\n                    sx={{\n                      mt: 2,\n                      mx: 'auto',\n                      display: 'block',\n                      textAlign: 'center',\n                      color: 'text.secondary',\n                    }}\n                  >\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\n                    <br /> max size of {fData(3145728)}\n                  </Typography>\n                }\n              /> */}\n              <></>\n            </Box>\n\n           \n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport { paramCase, capitalCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// _mock_\n// import { _userList } from '../../_mock';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport UserNewForm from '../../sections/@dashboard/user/UserNewForm';\nimport { getUsersId } from '../../redux/slices/user';\n\n\n// ----------------------------------------------------------------------\n\nexport default function UserCreate() {\n\n  const { themeStretch } = useSettings();\n  const { pathname } = useLocation();\n  const { name = '' } = useParams();\n  const isEdit = pathname.includes('edit');\n  const [currentUser, setCurrentUser] = useState({})\n\n  // const currentUser = _userList.find((user) => paramCase(user.name) === name);\n  useEffect(async () => {\n    console.log(\"namename\", name);\n    if (name) {\n      const value = await getUsersId(name)\n      setCurrentUser(value)\n    }\n\n\n    // dispatch(getProductsId());\n  }, []);\n  return (\n    <Page title=\"User: Create a new user\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: !isEdit ? 'New user' : capitalCase(`${currentUser.name}`) },\n          ]}\n        />\n        <UserNewForm isEdit={isEdit} currentUser={currentUser} />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}